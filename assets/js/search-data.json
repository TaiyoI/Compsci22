{
  
    
        "post0": {
            "title": "Installation Checks",
            "content": "python --version python2 --version . Python 3.9.12 Python 2.7.18 . conda list . # packages in environment at /Users/taiyoi/opt/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.1.4 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39hecd8cb5_0 conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39hecd8cb5_0 ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 python3912jvsc74a57bd0a7fbbb54f4c181edc972ed0306a01439bd91c43236a2d6fefc317f72e31b9e0c /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3912jvsc74a57bd0a7fbbb54f4c181edc972ed0306a01439bd91c43236a2d6fefc317f72e31b9e0c bash /Users/taiyoi/Library/Jupyter/kernels/bash javascript /Users/taiyoi/Library/Jupyter/kernels/javascript python3 /Users/taiyoi/opt/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 python3912jvsc74a57bd0a7fbbb54f4c181edc972ed0306a01439bd91c43236a2d6fefc317f72e31b9e0c /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3912jvsc74a57bd0a7fbbb54f4c181edc972ed0306a01439bd91c43236a2d6fefc317f72e31b9e0c python3 /Users/taiyoi/opt/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://taiyoi.github.io/Compsci22/techtalk/bash_checks",
            "relUrl": "/techtalk/bash_checks",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "APCSP FINAL",
            "content": "Quick Message . 01000011 01101111 01101101 01110000 01110101 01110100 01100101 01110010 00100000 01110011 01100011 01101001 01100101 01101110 01100011 01100101 00100000 01101001 01110011 00100000 01101101 01111001 00100000 01100110 01100001 01110110 01101111 01110010 01101001 01110100 01100101 00100000 01100011 01101100 01100001 01110011 01110011 . AP College Board Experience . This is a compliation of all of my work from this year’s AP college board quizzes . Questions/Difficulties . Overall, the questions were very difficult because I didn’t have much coding algorithm experience so I had to go online and do some researching. But overall, it started to make sense overtime. It was very similar to other algorithmic things in life like solving a rubix cube and math. . MCQ College Board PT.2 . I was having lots of trouble on the Internet portion of the APprep part. Although, I got all the answers correct last time the internet portion of the mc was difficult. The specific question: “Open protocols allow devices to specify how data packets are to be routed on the Internet in advance.” Stumped me because I didn’t really have much experience with routing on the internet. . Experience of Night At The Museum . Although the night of the museum event was only a 30 minute shift, I was able to view other classmates and other period’s projects. My group got a lot of feedback from other students as our project was not fully 100% finished. We got more inspiration from other projects. For example, changing the aesthetics of our project, adding more features such as a comment area, where you could comment on the different options of teams that we had. There especially was this one parent that questioned us about the mechanics and overall code and we were able to give them a satisfactory response and they gave us a suggestion on changing the colors of our site. I also had fun talking to others from other classes and socializing with those that weren’t in CSP and they all decided to take it next year. . College Board MCQ Final . Going into the Final, I was scared and nervous as the MCQ had 50 questions about a topic that two years ago was almost completely unknown to me. However, after watching the AP College board videos over the course of the trimester and also performing a lot of hands on activities such as creating our fast pages and learning on khan academy (especially the front end side). I was actually extremely surprise on my result: 46/50!! . Here are the questions I got Wrong On the MCQ . . Which of the following is a primary reason for the use of open protocols on the Internet? The right answer to this is: Open protocols provide a way to standardize data transmission between different devices. | This is the right answer because you need a standardized way of transmission in order to create a way of transmission between different devices across different platforms. | . | . A video game character can face toward one of four directions: north, south, east, and west. Each direction is stored in memory as a sequence of four bits. A new version of the game is created in which the character can face toward one of eight directions, adding northwest, northeast, southwest, and southeast to the original four possibilities. Which of the following statements is true about how the eight directions must be stored in memory? The right answer to this is: Four bits are enough to store the eight directions. | This is the right answer because Four bits can represent 2^4, or 16 pieces of information. | . | . Consider the following numeric values. | Binary 1011 Binary 1101 Decimal 5 Decimal 12 Which of the following lists the values in order from least to greatest? . The right answer to this is: Decimal 5, binary 1011, decimal 12, binary 1101 | This is the right answer because Binary 1011 is equivalent to decimal 11 and should be placed before decimal 12. | . . Consider the following code segment. | x ← 25 . y ← 50 . z ← 75 . x ← y . y ← z . z ← x . Which of the variables have the value 50 after executing the code segment? . The right answer to this is: x and z only | This is the right answer because the value of y is initially 50, but its value is changed to 75 in the fifth statement. The fourth statement assigns the value 50 to x. The sixth statement assigns the value 50 to z. | .",
            "url": "https://taiyoi.github.io/Compsci22/2022/11/08/CSP-Final.html",
            "relUrl": "/2022/11/08/CSP-Final.html",
            "date": " • Nov 8, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Pbl Webapi_tutorial",
            "content": "{ “cells”: [ { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# Python Web API Endpoints using Jokes n”, “&gt; A discussion on Web APIs. This is about creating a Web API (Jokes), and creating API that retains data as long as the Web Server is running. This is done using List and Dictionaries as the backend. Ultimately, this example could be extended by adding a database to the backend. However, for now, we are focussing on interaction of Frontend to Backend, this is called an Endpoint. n”, “- toc: true n”, “- comments: true n”, “- permalink: /techtalk/webapi n”, “- image: /images/python_restapi.png n”, “- categories: [3.B, 5.A, 5.B] n”, “- type: pbl n”, “- week: 9 n” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “### Model for API n”, “&gt; We will begin our journey into APIs by creating and thinking about data. We have learned about Python Lists and dictionaries. In this data example, we are going to make &quot;the best computer jokes ever ;)&quot; and serve them over the Internet. The ultimate objective is to allow our viewers to provide a like or dislike on each of our jokes. n”, “ n”, “- This code planning begins by coming up with some jokes and defining a data &quot;model&quot; to keep and manage the jokes. n”, “ - jokes_data contains a list of dictionary records containing joke and reactions: haha or boohoo n”, “ - joke_list contains collection of jokes we will put into jokes_data n”, “ n”, “- Next comes some functions to interact with our jokes n”, “ - def initJokes(): initializes jokes_data n”, “ - def getJokes(): returns the complete list of jokes n”, “ - def getJoke(): returns a single joke from our list n”, “ - … many more function can be examined by reading comments below …” ] }, { “cell_type”: “code”, “execution_count”: 1, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Most liked 17 n”, “15 The programmer got stuck in the shower because the instructions on the shampoo bottle said: Lather, Rinse, Repeat. n”, “ haha: 17 n”, “ boohoo: 2 n”, “ n”, “Most jeered 5 n”, “2 UNIX is basically a simple operating system… but you have to be a genius to understand the simplicity. n”, “ haha: 16 n”, “ boohoo: 5 n”, “ n”, “Random joke n”, “4 If at first you don’t succeed; call it version 1.0. n”, “ haha: 9 n”, “ boohoo: 2 n”, “ n”, “Jokes Count: 18 n” ] } ], “source”: [ “import random n”, “ n”, “jokes_data = [] n”, “joke_list = [ n”, “ &quot;If you give someone a program… you will frustrate them for a day; if you teach them how to program… you will &quot; n”, “ &quot;frustrate them for a lifetime.&quot;, n”, “ &quot;Q: Why did I divide sin by tan? A: Just cos.&quot;, n”, “ &quot;UNIX is basically a simple operating system… but you have to be a genius to understand the simplicity.&quot;, n”, “ &quot;Enter any 11-digit prime number to continue.&quot;, n”, “ &quot;If at first you don’t succeed; call it version 1.0.&quot;, n”, “ &quot;Java programmers are some of the most materialistic people I know, very object-oriented&quot;, n”, “ &quot;The oldest computer can be traced back to Adam and Eve. It was an apple but with extremely limited memory. Just &quot; n”, “ &quot;1 byte. And then everything crashed.&quot;, n”, “ &quot;Q: Why did Wi-Fi and the computer get married? A: Because they had a connection&quot;, n”, “ &quot;Bill Gates teaches a kindergarten class to count to ten. 1, 2, 3, 3.1, 95, 98, ME, 2000, XP, Vista, 7, 8, 10.&quot;, n”, “ &quot;Q: What’s a aliens favorite computer key? A: the space bar!&quot;, n”, “ &quot;There are 10 types of people in the world: those who understand binary, and those who don’t.&quot;, n”, “ &quot;If it wasn’t for C, we’d all be programming in BASI and OBOL.&quot;, n”, “ &quot;Computers make very fast, very accurate mistakes.&quot;, n”, “ &quot;Q: Why is it that programmers always confuse Halloween with Christmas? A: Because 31 OCT = 25 DEC.&quot;, n”, “ &quot;Q: How many programmers does it take to change a light bulb? A: None. It’s a hardware problem.&quot;, n”, “ &quot;The programmer got stuck in the shower because the instructions on the shampoo bottle said: Lather, Rinse, Repeat.&quot;, n”, “ &quot;Q: What is the biggest lie in the entire universe? A: I have read and agree to the Terms and Conditions.&quot;, n”, “ ‘An SQL statement walks into a bar and sees two tables. It approaches, and asks may I join you?’ n”, “] n”, “ n”, “# Initialize jokes n”, “def initJokes(): n”, “ # setup jokes into a dictionary with id, joke, haha, boohoo n”, “ item_id = 0 n”, “ for item in joke_list: n”, “ jokes_data.append({&quot;id&quot;: item_id, &quot;joke&quot;: item, &quot;haha&quot;: 0, &quot;boohoo&quot;: 0}) n”, “ item_id += 1 n”, “ # prime some haha responses n”, “ for i in range(200): n”, “ id = getRandomJoke()[‘id’] n”, “ addJokeHaHa(id) n”, “ # prime some haha responses n”, “ for i in range(50): n”, “ id = getRandomJoke()[‘id’] n”, “ addJokeBooHoo(id) n”, “ n”, “# Return all jokes from jokes_data n”, “def getJokes(): n”, “ return(jokes_data) n”, “ n”, “# Joke getter n”, “def getJoke(id): n”, “ return(jokes_data[id]) n”, “ n”, “# Return random joke from jokes_data n”, “def getRandomJoke(): n”, “ return(random.choice(jokes_data)) n”, “ n”, “# Liked joke n”, “def favoriteJoke(): n”, “ best = 0 n”, “ bestID = -1 n”, “ for joke in getJokes(): n”, “ if joke[‘haha’] &gt; best: n”, “ best = joke[‘haha’] n”, “ bestID = joke[‘id’] n”, “ return jokes_data[bestID] n”, “ n”, “# Jeered joke n”, “def jeeredJoke(): n”, “ worst = 0 n”, “ worstID = -1 n”, “ for joke in getJokes(): n”, “ if joke[‘boohoo’] &gt; worst: n”, “ worst = joke[‘boohoo’] n”, “ worstID = joke[‘id’] n”, “ return jokes_data[worstID] n”, “ n”, “# Add to haha for requested id n”, “def addJokeHaHa(id): n”, “ jokes_data[id][‘haha’] = jokes_data[id][‘haha’] + 1 n”, “ return jokes_data[id][‘haha’] n”, “ n”, “# Add to boohoo for requested id n”, “def addJokeBooHoo(id): n”, “ jokes_data[id][‘boohoo’] = jokes_data[id][‘boohoo’] + 1 n”, “ return jokes_data[id][‘boohoo’] n”, “ n”, “# Pretty Print joke n”, “def printJoke(joke): n”, “ print(joke[‘id’], joke[‘joke’], &quot; n&quot;, &quot;haha:&quot;, joke[‘haha’], &quot; n&quot;, &quot;boohoo:&quot;, joke[‘boohoo’], &quot; n&quot;) n”, “ n”, “# Number of jokes n”, “def countJokes(): n”, “ return len(jokes_data) n”, “ n”, “# Test Joke Model n”, “if name == &quot;main&quot;: n”, “ initJokes() # initialize jokes n”, “ n”, “ # Most likes and most jeered n”, “ best = favoriteJoke() n”, “ print(&quot;Most liked&quot;, best[‘haha’]) n”, “ printJoke(best) n”, “ worst = jeeredJoke() n”, “ print(&quot;Most jeered&quot;, worst[‘boohoo’]) n”, “ printJoke(worst) n”, “ n”, “ # Random joke n”, “ print(&quot;Random joke&quot;) n”, “ printJoke(getRandomJoke()) n”, “ n”, “ # Count of Jokes n”, “ print(&quot;Jokes Count: &quot; + str(countJokes()))” ] }, { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “### Backend Interface for Web API (Control) n”, “&gt; An application programming interface (API) is the medium by which different systems of software interact. In our applications we have two big systems: n”, “1. Python Backend that stores data beyond a single Web page n”, “2. GH Pages/Fastpages Frontend that is responsible for presenting data n”, “ n”, “To communicate data between Frontend and Backend, this section Backend code provides and interface to the Frontend using a Web Service Endpoint. Examples of endpoints are listed below and can be typed within a browser, which will return JSON data: n”, “- https://flask.nighthawkcodingsociety.com/api/jokes n”, “- https://flask.nighthawkcodingsociety.com/api/jokes/2 n”, “- https://flask.nighthawkcodingsociety.com/api/jokes/random n”, “ n”, “As you can see, these Endpoints return JSON. They are NOT that readable by normal humans. However, they are very effective in passing requested data across the Internet. The Frontend code is responsible for formatting and presenting and interface that allows the typical computer user to interact with this data. n”, “ n”, “The next cell of code is Creating Endpoints that return JSON. This allows developers in the Frontend to interact with Backend data. API is a contract between the Frontend and Backend on how to share data. n”, “ n”, “FYI, there is NO output from this section . “ ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: {}, “outputs”: [], “source”: [ “from flask import Blueprint, jsonify # jsonify creates an endpoint response object n”, “from flask_restful import Api, Resource # used for REST API building n”, “import requests # used for testing n”, “import random n”, “ n”, “# Blueprints allow this code to be procedurally abstracted from main.py, meaning code is not all in one place n”, “app_api = Blueprint(‘api’, name, n”, “ url_prefix=’/api/jokes’) # endpoint prefix avoid redundantly typing /api/jokes over and over n”, “ n”, “# API generator https://flask-restful.readthedocs.io/en/latest/api.html#id1 n”, “api = Api(app_api) n”, “ n”, “class JokesAPI: n”, “ # not implemented, this would be where we would allow creation of a new Joke n”, “ class _Create(Resource): n”, “ def post(self, joke): n”, “ pass n”, “ n”, “ # getJokes() n”, “ class _Read(Resource): n”, “ def get(self): n”, “ return jsonify(getJokes()) n”, “ n”, “ # getJoke(id) n”, “ class _ReadID(Resource): n”, “ def get(self, id): n”, “ return jsonify(getJoke(id)) n”, “ n”, “ # getRandomJoke() n”, “ class _ReadRandom(Resource): n”, “ def get(self): n”, “ return jsonify(getRandomJoke()) n”, “ n”, “ # getRandomJoke() n”, “ class _ReadCount(Resource): n”, “ def get(self): n”, “ count = countJokes() n”, “ countMsg = {‘count’: count} n”, “ return jsonify(countMsg) n”, “ n”, “ # put method: addJokeHaHa n”, “ class _UpdateLike(Resource): n”, “ def put(self, id): n”, “ addJokeHaHa(id) n”, “ return jsonify(getJoke(id)) n”, “ n”, “ # put method: addJokeBooHoo n”, “ class _UpdateJeer(Resource): n”, “ def put(self, id): n”, “ addJokeBooHoo(id) n”, “ return jsonify(getJoke(id)) n”, “ n”, “ # building RESTapi interfaces, these routes are added to Web Server http://&lt;server&lt;/api/jokes n”, “ api.add_resource(_Create, ‘/create/&#39;) n&quot;, &quot; api.add_resource(_Read, &#39;/&#39;) # default, which returns all jokes n&quot;, &quot; api.add_resource(_ReadID, &#39;/&#39;) n&quot;, &quot; api.add_resource(_ReadRandom, &#39;/random&#39;) n&quot;, &quot; api.add_resource(_ReadCount, &#39;/count&#39;) n&quot;, &quot; api.add_resource(_UpdateLike, &#39;/like//&#39;) n&quot;, &quot; api.add_resource(_UpdateJeer, &#39;/jeer//&#39;) n&quot;, &quot; n&quot; ] }, { &quot;cell_type&quot;: &quot;markdown&quot;, &quot;metadata&quot;: {}, &quot;source&quot;: [ &quot;### Frontend (View Simulation) and Hacks n&quot;, &quot;&gt; This python codes tests endpoints on a server. This can be handy for development and testing when making modifications to the Jokes Web APIs. This code works off of the server endpoint/url, not from code cells above it in this notebook. n&quot;, &quot; n&quot;, &quot;To work with this code and make observation for learning... n&quot;, &quot;- Run a local server from flask_portfolio project and the change server variable to be local n&quot;, &quot;- Observe the requests endpoints and the output, see if you can observe what is happening/changing on put requests n&quot;, &quot;- The &quot;requests &quot; are captured into a List, the List is used in the for loop to extract from RESTful API format. n&quot;, &quot;- Try running this with Debugging and observe what data is being created at each step (Required) n&quot;, &quot;- Try to format this data in Python print statements to be more readable (Required) n&quot;, &quot;- Start and stop local server and observe errors&quot; ] }, { &quot;cell_type&quot;: &quot;code&quot;, &quot;execution_count&quot;: null, &quot;metadata&quot;: {}, &quot;outputs&quot;: [], &quot;source&quot;: [ &quot;# Pick the server you want to test comment in/comment out n&quot;, &quot;# server = &quot;http://127.0.0.1:5000/ &quot; # run local n&quot;, &quot;server = &#39;https://flask.nighthawkcodingsociety.com/&#39; # run from web server n&quot;, &quot;url = server + &quot;api/jokes/ &quot; n&quot;, &quot;responses = [] # responses list n&quot;, &quot; n&quot;, &quot;# Get the count of jokes on server n&quot;, &quot;count_response = requests.get(url+ &quot;count &quot;) n&quot;, &quot;count_json = count_response.json() n&quot;, &quot;count = count_json[&#39;count&#39;] n&quot;, &quot; n&quot;, &quot;# Update likes/dislikes test sequence n&quot;, &quot;num = str(random.randint(0, count-1)) # test a random record n&quot;, &quot;responses.append( n&quot;, &quot; requests.get(url+num) # Get/read joke by id n&quot;, &quot; ) n&quot;, &quot;responses.append( n&quot;, &quot; requests.put(url+ &quot;like/ &quot;+num) # Put/add to like count n&quot;, &quot; ) n&quot;, &quot;responses.append( n&quot;, &quot; requests.put(url+ &quot;jeer/ &quot;+num) # Put/add to jeer count n&quot;, &quot; ) n&quot;, &quot; n&quot;, &quot;# Get a random joke n&quot;, &quot;responses.append( n&quot;, &quot; requests.get(url+ &quot;random &quot;) # Get/read a random joke n&quot;, &quot; ) n&quot;, &quot; n&quot;, &quot;# Cycle through and print responses n&quot;, &quot;for response in responses: n&quot;, &quot; print(response) n&quot;, &quot; try: n&quot;, &quot; print(response.json()) n&quot;, &quot; except: n&quot;, &quot; print( &quot;data error &quot;)&quot; ] } ], &quot;metadata&quot;: { &quot;kernelspec&quot;: { &quot;display_name&quot;: &quot;Python 3.10.6 64-bit&quot;, &quot;language&quot;: &quot;python&quot;, &quot;name&quot;: &quot;python3&quot; }, &quot;language_info&quot;: { &quot;codemirror_mode&quot;: { &quot;name&quot;: &quot;ipython&quot;, &quot;version&quot;: 3 }, &quot;file_extension&quot;: &quot;.py&quot;, &quot;mimetype&quot;: &quot;text/x-python&quot;, &quot;name&quot;: &quot;python&quot;, &quot;nbconvert_exporter&quot;: &quot;python&quot;, &quot;pygments_lexer&quot;: &quot;ipython3&quot;, &quot;version&quot;: &quot;3.10.6&quot; }, &quot;orig_nbformat&quot;: 4, &quot;vscode&quot;: { &quot;interpreter&quot;: { &quot;hash&quot;: &quot;b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e&quot; } } }, &quot;nbformat&quot;: 4, &quot;nbformat_minor&quot;: 2 } .",
            "url": "https://taiyoi.github.io/Compsci22/2022/10/17/PBL-webapi_tutorial.ipynb",
            "relUrl": "/2022/10/17/PBL-webapi_tutorial.ipynb",
            "date": " • Oct 17, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;b4fb6918dfmsh4040a7ea004e390p12c87ajsn6468fcf96ab9&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data print(response.json()) # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . {&#39;countries_stat&#39;: [{&#39;country_name&#39;: &#39;USA&#39;, &#39;cases&#39;: &#39;82,649,779&#39;, &#39;deaths&#39;: &#39;1,018,316&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;80,434,925&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1,465&#39;, &#39;active_cases&#39;: &#39;1,196,538&#39;, &#39;total_cases_per_1m_population&#39;: &#39;247,080&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,044&#39;, &#39;total_tests&#39;: &#39;1,000,275,726&#39;, &#39;tests_per_1m_population&#39;: &#39;2,990,303&#39;}, {&#39;country_name&#39;: &#39;India&#39;, &#39;cases&#39;: &#39;43,057,545&#39;, &#39;deaths&#39;: &#39;522,193&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;42,519,479&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;698&#39;, &#39;active_cases&#39;: &#39;15,873&#39;, &#39;total_cases_per_1m_population&#39;: &#39;30,657&#39;, &#39;deaths_per_1m_population&#39;: &#39;372&#39;, &#39;total_tests&#39;: &#39;834,717,702&#39;, &#39;tests_per_1m_population&#39;: &#39;594,319&#39;}, {&#39;country_name&#39;: &#39;Brazil&#39;, &#39;cases&#39;: &#39;30,345,654&#39;, &#39;deaths&#39;: &#39;662,663&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;29,364,400&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;8,318&#39;, &#39;active_cases&#39;: &#39;318,591&#39;, &#39;total_cases_per_1m_population&#39;: &#39;140,954&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,078&#39;, &#39;total_tests&#39;: &#39;63,776,166&#39;, &#39;tests_per_1m_population&#39;: &#39;296,238&#39;}, {&#39;country_name&#39;: &#39;France&#39;, &#39;cases&#39;: &#39;28,244,977&#39;, &#39;deaths&#39;: &#39;145,020&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;25,852,832&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1,677&#39;, &#39;active_cases&#39;: &#39;2,247,125&#39;, &#39;total_cases_per_1m_population&#39;: &#39;430,996&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,213&#39;, &#39;total_tests&#39;: &#39;266,484,045&#39;, &#39;tests_per_1m_population&#39;: &#39;4,066,333&#39;}, {&#39;country_name&#39;: &#39;Germany&#39;, &#39;cases&#39;: &#39;24,109,433&#39;, &#39;deaths&#39;: &#39;134,624&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;21,243,000&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1,980&#39;, &#39;active_cases&#39;: &#39;2,731,809&#39;, &#39;total_cases_per_1m_population&#39;: &#39;286,106&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,598&#39;, &#39;total_tests&#39;: &#39;122,332,384&#39;, &#39;tests_per_1m_population&#39;: &#39;1,451,714&#39;}, {&#39;country_name&#39;: &#39;UK&#39;, &#39;cases&#39;: &#39;21,933,206&#39;, &#39;deaths&#39;: &#39;173,352&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;20,782,350&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;339&#39;, &#39;active_cases&#39;: &#39;977,504&#39;, &#39;total_cases_per_1m_population&#39;: &#39;320,054&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,530&#39;, &#39;total_tests&#39;: &#39;514,985,782&#39;, &#39;tests_per_1m_population&#39;: &#39;7,514,777&#39;}, {&#39;country_name&#39;: &#39;Russia&#39;, &#39;cases&#39;: &#39;18,137,137&#39;, &#39;deaths&#39;: &#39;374,902&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;17,474,628&#39;, &#39;new_deaths&#39;: &#39;168&#39;, &#39;new_cases&#39;: &#39;8,446&#39;, &#39;serious_critical&#39;: &#39;2,300&#39;, &#39;active_cases&#39;: &#39;287,607&#39;, &#39;total_cases_per_1m_population&#39;: &#39;124,187&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,567&#39;, &#39;total_tests&#39;: &#39;273,400,000&#39;, &#39;tests_per_1m_population&#39;: &#39;1,871,995&#39;}, {&#39;country_name&#39;: &#39;S. Korea&#39;, &#39;cases&#39;: &#39;16,895,194&#39;, &#39;deaths&#39;: &#39;22,133&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;109&#39;, &#39;new_cases&#39;: &#39;64,725&#39;, &#39;serious_critical&#39;: &#39;726&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;329,028&#39;, &#39;deaths_per_1m_population&#39;: &#39;431&#39;, &#39;total_tests&#39;: &#39;15,804,065&#39;, &#39;tests_per_1m_population&#39;: &#39;307,778&#39;}, {&#39;country_name&#39;: &#39;Italy&#39;, &#39;cases&#39;: &#39;16,079,209&#39;, &#39;deaths&#39;: &#39;162,609&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;14,684,371&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;409&#39;, &#39;active_cases&#39;: &#39;1,232,229&#39;, &#39;total_cases_per_1m_population&#39;: &#39;266,648&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,697&#39;, &#39;total_tests&#39;: &#39;211,365,630&#39;, &#39;tests_per_1m_population&#39;: &#39;3,505,156&#39;}, {&#39;country_name&#39;: &#39;Turkey&#39;, &#39;cases&#39;: &#39;15,016,270&#39;, &#39;deaths&#39;: &#39;98,676&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;14,854,475&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;975&#39;, &#39;active_cases&#39;: &#39;63,119&#39;, &#39;total_cases_per_1m_population&#39;: &#39;174,654&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,148&#39;, &#39;total_tests&#39;: &#39;158,110,923&#39;, &#39;tests_per_1m_population&#39;: &#39;1,838,986&#39;}, {&#39;country_name&#39;: &#39;Spain&#39;, &#39;cases&#39;: &#39;11,786,036&#39;, &#39;deaths&#39;: &#39;103,908&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;11,261,340&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;339&#39;, &#39;active_cases&#39;: &#39;420,788&#39;, &#39;total_cases_per_1m_population&#39;: &#39;251,906&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,221&#39;, &#39;total_tests&#39;: &#39;471,036,328&#39;, &#39;tests_per_1m_population&#39;: &#39;10,067,575&#39;}, {&#39;country_name&#39;: &#39;Vietnam&#39;, &#39;cases&#39;: &#39;10,563,502&#39;, &#39;deaths&#39;: &#39;43,013&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;9,086,075&#39;, &#39;new_deaths&#39;: &#39;9&#39;, &#39;new_cases&#39;: &#39;8,813&#39;, &#39;serious_critical&#39;: &#39;612&#39;, &#39;active_cases&#39;: &#39;1,434,414&#39;, &#39;total_cases_per_1m_population&#39;: &#39;106,789&#39;, &#39;deaths_per_1m_population&#39;: &#39;435&#39;, &#39;total_tests&#39;: &#39;85,789,114&#39;, &#39;tests_per_1m_population&#39;: &#39;867,262&#39;}, {&#39;country_name&#39;: &#39;Argentina&#39;, &#39;cases&#39;: &#39;9,060,923&#39;, &#39;deaths&#39;: &#39;128,344&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;8,895,999&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;412&#39;, &#39;active_cases&#39;: &#39;36,580&#39;, &#39;total_cases_per_1m_population&#39;: &#39;197,215&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,793&#39;, &#39;total_tests&#39;: &#39;35,716,069&#39;, &#39;tests_per_1m_population&#39;: &#39;777,376&#39;}, {&#39;country_name&#39;: &#39;Netherlands&#39;, &#39;cases&#39;: &#39;8,035,603&#39;, &#39;deaths&#39;: &#39;22,206&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7,643,520&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;94&#39;, &#39;active_cases&#39;: &#39;369,877&#39;, &#39;total_cases_per_1m_population&#39;: &#39;467,096&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,291&#39;, &#39;total_tests&#39;: &#39;21,107,399&#39;, &#39;tests_per_1m_population&#39;: &#39;1,226,938&#39;}, {&#39;country_name&#39;: &#39;Japan&#39;, &#39;cases&#39;: &#39;7,621,562&#39;, &#39;deaths&#39;: &#39;29,284&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7,135,403&#39;, &#39;new_deaths&#39;: &#39;27&#39;, &#39;new_cases&#39;: &#39;43,721&#39;, &#39;serious_critical&#39;: &#39;195&#39;, &#39;active_cases&#39;: &#39;456,875&#39;, &#39;total_cases_per_1m_population&#39;: &#39;60,596&#39;, &#39;deaths_per_1m_population&#39;: &#39;233&#39;, &#39;total_tests&#39;: &#39;46,690,473&#39;, &#39;tests_per_1m_population&#39;: &#39;371,215&#39;}, {&#39;country_name&#39;: &#39;Iran&#39;, &#39;cases&#39;: &#39;7,216,040&#39;, &#39;deaths&#39;: &#39;140,975&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;6,966,954&#39;, &#39;new_deaths&#39;: &#39;13&#39;, &#39;new_cases&#39;: &#39;528&#39;, &#39;serious_critical&#39;: &#39;1,046&#39;, &#39;active_cases&#39;: &#39;108,111&#39;, &#39;total_cases_per_1m_population&#39;: &#39;83,972&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,641&#39;, &#39;total_tests&#39;: &#39;50,811,054&#39;, &#39;tests_per_1m_population&#39;: &#39;591,284&#39;}, {&#39;country_name&#39;: &#39;Colombia&#39;, &#39;cases&#39;: &#39;6,091,094&#39;, &#39;deaths&#39;: &#39;139,771&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,924,433&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;342&#39;, &#39;active_cases&#39;: &#39;26,890&#39;, &#39;total_cases_per_1m_population&#39;: &#39;117,448&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,695&#39;, &#39;total_tests&#39;: &#39;34,355,022&#39;, &#39;tests_per_1m_population&#39;: &#39;662,433&#39;}, {&#39;country_name&#39;: &#39;Indonesia&#39;, &#39;cases&#39;: &#39;6,043,768&#39;, &#39;deaths&#39;: &#39;156,067&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,868,251&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2,771&#39;, &#39;active_cases&#39;: &#39;19,450&#39;, &#39;total_cases_per_1m_population&#39;: &#39;21,682&#39;, &#39;deaths_per_1m_population&#39;: &#39;560&#39;, &#39;total_tests&#39;: &#39;94,877,499&#39;, &#39;tests_per_1m_population&#39;: &#39;340,374&#39;}, {&#39;country_name&#39;: &#39;Poland&#39;, &#39;cases&#39;: &#39;5,991,197&#39;, &#39;deaths&#39;: &#39;115,948&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,334,375&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;344&#39;, &#39;serious_critical&#39;: &#39;1,588&#39;, &#39;active_cases&#39;: &#39;540,874&#39;, &#39;total_cases_per_1m_population&#39;: &#39;158,616&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,070&#39;, &#39;total_tests&#39;: &#39;36,027,053&#39;, &#39;tests_per_1m_population&#39;: &#39;953,808&#39;}, {&#39;country_name&#39;: &#39;Mexico&#39;, &#39;cases&#39;: &#39;5,733,514&#39;, &#39;deaths&#39;: &#39;324,117&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,033,892&#39;, &#39;new_deaths&#39;: &#39;57&#39;, &#39;new_cases&#39;: &#39;802&#39;, &#39;serious_critical&#39;: &#39;4,798&#39;, &#39;active_cases&#39;: &#39;375,505&#39;, &#39;total_cases_per_1m_population&#39;: &#39;43,641&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,467&#39;, &#39;total_tests&#39;: &#39;15,762,889&#39;, &#39;tests_per_1m_population&#39;: &#39;119,981&#39;}, {&#39;country_name&#39;: &#39;Australia&#39;, &#39;cases&#39;: &#39;5,689,377&#39;, &#39;deaths&#39;: &#39;6,991&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,274,197&#39;, &#39;new_deaths&#39;: &#39;21&#39;, &#39;new_cases&#39;: &#39;34,769&#39;, &#39;serious_critical&#39;: &#39;135&#39;, &#39;active_cases&#39;: &#39;408,189&#39;, &#39;total_cases_per_1m_population&#39;: &#39;218,537&#39;, &#39;deaths_per_1m_population&#39;: &#39;269&#39;, &#39;total_tests&#39;: &#39;68,845,476&#39;, &#39;tests_per_1m_population&#39;: &#39;2,644,452&#39;}, {&#39;country_name&#39;: &#39;Ukraine&#39;, &#39;cases&#39;: &#39;4,997,224&#39;, &#39;deaths&#39;: &#39;108,306&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;177&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;115,517&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,504&#39;, &#39;total_tests&#39;: &#39;19,521,252&#39;, &#39;tests_per_1m_population&#39;: &#39;451,259&#39;}, {&#39;country_name&#39;: &#39;Malaysia&#39;, &#39;cases&#39;: &#39;4,427,067&#39;, &#39;deaths&#39;: &#39;35,491&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;4,310,599&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;89&#39;, &#39;active_cases&#39;: &#39;80,977&#39;, &#39;total_cases_per_1m_population&#39;: &#39;133,690&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,072&#39;, &#39;total_tests&#39;: &#39;58,332,799&#39;, &#39;tests_per_1m_population&#39;: &#39;1,761,549&#39;}, {&#39;country_name&#39;: &#39;Thailand&#39;, &#39;cases&#39;: &#39;4,165,874&#39;, &#39;deaths&#39;: &#39;27,778&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,954,945&#39;, &#39;new_deaths&#39;: &#39;126&#39;, &#39;new_cases&#39;: &#39;17,784&#39;, &#39;serious_critical&#39;: &#39;1,496&#39;, &#39;active_cases&#39;: &#39;183,151&#39;, &#39;total_cases_per_1m_population&#39;: &#39;59,414&#39;, &#39;deaths_per_1m_population&#39;: &#39;396&#39;, &#39;total_tests&#39;: &#39;17,270,775&#39;, &#39;tests_per_1m_population&#39;: &#39;246,317&#39;}, {&#39;country_name&#39;: &#39;Austria&#39;, &#39;cases&#39;: &#39;4,104,859&#39;, &#39;deaths&#39;: &#39;18,047&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,989,860&#39;, &#39;new_deaths&#39;: &#39;12&#39;, &#39;new_cases&#39;: &#39;5,810&#39;, &#39;serious_critical&#39;: &#39;121&#39;, &#39;active_cases&#39;: &#39;96,952&#39;, &#39;total_cases_per_1m_population&#39;: &#39;451,125&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,983&#39;, &#39;total_tests&#39;: &#39;181,825,734&#39;, &#39;tests_per_1m_population&#39;: &#39;19,982,688&#39;}, {&#39;country_name&#39;: &#39;Israel&#39;, &#39;cases&#39;: &#39;4,054,342&#39;, &#39;deaths&#39;: &#39;10,658&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;4,009,152&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;220&#39;, &#39;active_cases&#39;: &#39;34,532&#39;, &#39;total_cases_per_1m_population&#39;: &#39;434,735&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,143&#39;, &#39;total_tests&#39;: &#39;41,373,364&#39;, &#39;tests_per_1m_population&#39;: &#39;4,436,346&#39;}, {&#39;country_name&#39;: &#39;Belgium&#39;, &#39;cases&#39;: &#39;4,015,791&#39;, &#39;deaths&#39;: &#39;31,319&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,726,457&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;169&#39;, &#39;active_cases&#39;: &#39;258,015&#39;, &#39;total_cases_per_1m_population&#39;: &#39;343,798&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,681&#39;, &#39;total_tests&#39;: &#39;33,456,470&#39;, &#39;tests_per_1m_population&#39;: &#39;2,864,259&#39;}, {&#39;country_name&#39;: &#39;Czechia&#39;, &#39;cases&#39;: &#39;3,895,544&#39;, &#39;deaths&#39;: &#39;40,081&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,838,099&#39;, &#39;new_deaths&#39;: &#39;5&#39;, &#39;new_cases&#39;: &#39;911&#39;, &#39;serious_critical&#39;: &#39;43&#39;, &#39;active_cases&#39;: &#39;17,364&#39;, &#39;total_cases_per_1m_population&#39;: &#39;362,550&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,730&#39;, &#39;total_tests&#39;: &#39;55,117,064&#39;, &#39;tests_per_1m_population&#39;: &#39;5,129,629&#39;}, {&#39;country_name&#39;: &#39;Portugal&#39;, &#39;cases&#39;: &#39;3,791,744&#39;, &#39;deaths&#39;: &#39;22,162&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;61&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;373,827&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,185&#39;, &#39;total_tests&#39;: &#39;40,748,372&#39;, &#39;tests_per_1m_population&#39;: &#39;4,017,371&#39;}, {&#39;country_name&#39;: &#39;South Africa&#39;, &#39;cases&#39;: &#39;3,759,689&#39;, &#39;deaths&#39;: &#39;100,298&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,632,572&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;175&#39;, &#39;active_cases&#39;: &#39;26,819&#39;, &#39;total_cases_per_1m_population&#39;: &#39;61,981&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,653&#39;, &#39;total_tests&#39;: &#39;24,313,334&#39;, &#39;tests_per_1m_population&#39;: &#39;400,824&#39;}, {&#39;country_name&#39;: &#39;Canada&#39;, &#39;cases&#39;: &#39;3,695,585&#39;, &#39;deaths&#39;: &#39;38,777&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,426,082&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;426&#39;, &#39;active_cases&#39;: &#39;230,726&#39;, &#39;total_cases_per_1m_population&#39;: &#39;96,391&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,011&#39;, &#39;total_tests&#39;: &#39;60,536,359&#39;, &#39;tests_per_1m_population&#39;: &#39;1,578,955&#39;}, {&#39;country_name&#39;: &#39;Philippines&#39;, &#39;cases&#39;: &#39;3,684,500&#39;, &#39;deaths&#39;: &#39;60,182&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,610,658&#39;, &#39;new_deaths&#39;: &#39;3&#39;, &#39;new_cases&#39;: &#39;205&#39;, &#39;serious_critical&#39;: &#39;289&#39;, &#39;active_cases&#39;: &#39;13,660&#39;, &#39;total_cases_per_1m_population&#39;: &#39;32,835&#39;, &#39;deaths_per_1m_population&#39;: &#39;536&#39;, &#39;total_tests&#39;: &#39;29,427,586&#39;, &#39;tests_per_1m_population&#39;: &#39;262,246&#39;}, {&#39;country_name&#39;: &#39;Switzerland&#39;, &#39;cases&#39;: &#39;3,579,867&#39;, &#39;deaths&#39;: &#39;13,816&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,378,507&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;90&#39;, &#39;active_cases&#39;: &#39;187,544&#39;, &#39;total_cases_per_1m_population&#39;: &#39;408,247&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,576&#39;, &#39;total_tests&#39;: &#39;20,666,182&#39;, &#39;tests_per_1m_population&#39;: &#39;2,356,766&#39;}, {&#39;country_name&#39;: &#39;Peru&#39;, &#39;cases&#39;: &#39;3,559,343&#39;, &#39;deaths&#39;: &#39;212,724&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;356&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;105,303&#39;, &#39;deaths_per_1m_population&#39;: &#39;6,293&#39;, &#39;total_tests&#39;: &#39;29,592,270&#39;, &#39;tests_per_1m_population&#39;: &#39;875,489&#39;}, {&#39;country_name&#39;: &#39;Chile&#39;, &#39;cases&#39;: &#39;3,544,463&#39;, &#39;deaths&#39;: &#39;57,375&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,368,772&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;286&#39;, &#39;active_cases&#39;: &#39;118,316&#39;, &#39;total_cases_per_1m_population&#39;: &#39;182,588&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,956&#39;, &#39;total_tests&#39;: &#39;36,711,724&#39;, &#39;tests_per_1m_population&#39;: &#39;1,891,147&#39;}, {&#39;country_name&#39;: &#39;Greece&#39;, &#39;cases&#39;: &#39;3,277,557&#39;, &#39;deaths&#39;: &#39;28,867&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,151,717&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;277&#39;, &#39;active_cases&#39;: &#39;96,973&#39;, &#39;total_cases_per_1m_population&#39;: &#39;317,250&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,794&#39;, &#39;total_tests&#39;: &#39;78,872,546&#39;, &#39;tests_per_1m_population&#39;: &#39;7,634,431&#39;}, {&#39;country_name&#39;: &#39;Denmark&#39;, &#39;cases&#39;: &#39;2,959,040&#39;, &#39;deaths&#39;: &#39;6,072&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,929,091&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;15&#39;, &#39;active_cases&#39;: &#39;23,877&#39;, &#39;total_cases_per_1m_population&#39;: &#39;507,639&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,042&#39;, &#39;total_tests&#39;: &#39;127,141,200&#39;, &#39;tests_per_1m_population&#39;: &#39;21,811,751&#39;}, {&#39;country_name&#39;: &#39;Romania&#39;, &#39;cases&#39;: &#39;2,888,318&#39;, &#39;deaths&#39;: &#39;65,427&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,606,660&#39;, &#39;new_deaths&#39;: &#39;6&#39;, &#39;new_cases&#39;: &#39;494&#39;, &#39;serious_critical&#39;: &#39;216&#39;, &#39;active_cases&#39;: &#39;216,231&#39;, &#39;total_cases_per_1m_population&#39;: &#39;151,968&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,442&#39;, &#39;total_tests&#39;: &#39;22,594,702&#39;, &#39;tests_per_1m_population&#39;: &#39;1,188,815&#39;}, {&#39;country_name&#39;: &#39;Sweden&#39;, &#39;cases&#39;: &#39;2,498,388&#39;, &#39;deaths&#39;: &#39;18,656&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,464,421&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;19&#39;, &#39;active_cases&#39;: &#39;15,311&#39;, &#39;total_cases_per_1m_population&#39;: &#39;244,630&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,827&#39;, &#39;total_tests&#39;: &#39;18,493,218&#39;, &#39;tests_per_1m_population&#39;: &#39;1,810,763&#39;}, {&#39;country_name&#39;: &#39;Iraq&#39;, &#39;cases&#39;: &#39;2,324,141&#39;, &#39;deaths&#39;: &#39;25,204&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,295,947&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;20&#39;, &#39;active_cases&#39;: &#39;2,990&#39;, &#39;total_cases_per_1m_population&#39;: &#39;55,534&#39;, &#39;deaths_per_1m_population&#39;: &#39;602&#39;, &#39;total_tests&#39;: &#39;18,450,939&#39;, &#39;tests_per_1m_population&#39;: &#39;440,871&#39;}, {&#39;country_name&#39;: &#39;Serbia&#39;, &#39;cases&#39;: &#39;2,001,144&#39;, &#39;deaths&#39;: &#39;15,953&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,967,786&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;25&#39;, &#39;active_cases&#39;: &#39;17,405&#39;, &#39;total_cases_per_1m_population&#39;: &#39;230,710&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,839&#39;, &#39;total_tests&#39;: &#39;9,427,662&#39;, &#39;tests_per_1m_population&#39;: &#39;1,086,907&#39;}, {&#39;country_name&#39;: &#39;Bangladesh&#39;, &#39;cases&#39;: &#39;1,952,532&#39;, &#39;deaths&#39;: &#39;29,127&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,893,131&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1,297&#39;, &#39;active_cases&#39;: &#39;30,274&#39;, &#39;total_cases_per_1m_population&#39;: &#39;11,646&#39;, &#39;deaths_per_1m_population&#39;: &#39;174&#39;, &#39;total_tests&#39;: &#39;13,956,056&#39;, &#39;tests_per_1m_population&#39;: &#39;83,245&#39;}, {&#39;country_name&#39;: &#39;Hungary&#39;, &#39;cases&#39;: &#39;1,890,953&#39;, &#39;deaths&#39;: &#39;46,048&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,776,617&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;45&#39;, &#39;active_cases&#39;: &#39;68,288&#39;, &#39;total_cases_per_1m_population&#39;: &#39;196,645&#39;, &#39;deaths_per_1m_population&#39;: &#39;4,789&#39;, &#39;total_tests&#39;: &#39;11,295,119&#39;, &#39;tests_per_1m_population&#39;: &#39;1,174,608&#39;}, {&#39;country_name&#39;: &#39;Slovakia&#39;, &#39;cases&#39;: &#39;1,774,808&#39;, &#39;deaths&#39;: &#39;19,839&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,730,712&#39;, &#39;new_deaths&#39;: &#39;10&#39;, &#39;new_cases&#39;: &#39;1,155&#39;, &#39;serious_critical&#39;: &#39;88&#39;, &#39;active_cases&#39;: &#39;24,257&#39;, &#39;total_cases_per_1m_population&#39;: &#39;324,794&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,631&#39;, &#39;total_tests&#39;: &#39;7,057,901&#39;, &#39;tests_per_1m_population&#39;: &#39;1,291,611&#39;}, {&#39;country_name&#39;: &#39;Jordan&#39;, &#39;cases&#39;: &#39;1,694,216&#39;, &#39;deaths&#39;: &#39;14,048&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,678,941&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;124&#39;, &#39;active_cases&#39;: &#39;1,227&#39;, &#39;total_cases_per_1m_population&#39;: &#39;163,125&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,353&#39;, &#39;total_tests&#39;: &#39;16,670,254&#39;, &#39;tests_per_1m_population&#39;: &#39;1,605,074&#39;}, {&#39;country_name&#39;: &#39;Georgia&#39;, &#39;cases&#39;: &#39;1,654,255&#39;, &#39;deaths&#39;: &#39;16,800&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,635,791&#39;, &#39;new_deaths&#39;: &#39;3&#39;, &#39;new_cases&#39;: &#39;92&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1,664&#39;, &#39;total_cases_per_1m_population&#39;: &#39;416,129&#39;, &#39;deaths_per_1m_population&#39;: &#39;4,226&#39;, &#39;total_tests&#39;: &#39;16,807,205&#39;, &#39;tests_per_1m_population&#39;: &#39;4,227,861&#39;}, {&#39;country_name&#39;: &#39;Pakistan&#39;, &#39;cases&#39;: &#39;1,527,856&#39;, &#39;deaths&#39;: &#39;30,369&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,493,998&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;105&#39;, &#39;serious_critical&#39;: &#39;186&#39;, &#39;active_cases&#39;: &#39;3,489&#39;, &#39;total_cases_per_1m_population&#39;: &#39;6,683&#39;, &#39;deaths_per_1m_population&#39;: &#39;133&#39;, &#39;total_tests&#39;: &#39;28,048,307&#39;, &#39;tests_per_1m_population&#39;: &#39;122,679&#39;}, {&#39;country_name&#39;: &#39;Ireland&#39;, &#39;cases&#39;: &#39;1,509,536&#39;, &#39;deaths&#39;: &#39;6,996&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,415,949&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;41&#39;, &#39;active_cases&#39;: &#39;86,591&#39;, &#39;total_cases_per_1m_population&#39;: &#39;299,669&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,389&#39;, &#39;total_tests&#39;: &#39;12,016,948&#39;, &#39;tests_per_1m_population&#39;: &#39;2,385,571&#39;}, {&#39;country_name&#39;: &#39;Norway&#39;, &#39;cases&#39;: &#39;1,423,509&#39;, &#39;deaths&#39;: &#39;2,871&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;20&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;258,925&#39;, &#39;deaths_per_1m_population&#39;: &#39;522&#39;, &#39;total_tests&#39;: &#39;11,002,430&#39;, &#39;tests_per_1m_population&#39;: &#39;2,001,256&#39;}, {&#39;country_name&#39;: &#39;Kazakhstan&#39;, &#39;cases&#39;: &#39;1,305,457&#39;, &#39;deaths&#39;: &#39;13,660&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,290,988&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;10&#39;, &#39;serious_critical&#39;: &#39;24&#39;, &#39;active_cases&#39;: &#39;809&#39;, &#39;total_cases_per_1m_population&#39;: &#39;68,056&#39;, &#39;deaths_per_1m_population&#39;: &#39;712&#39;, &#39;total_tests&#39;: &#39;11,575,012&#39;, &#39;tests_per_1m_population&#39;: &#39;603,428&#39;}, {&#39;country_name&#39;: &#39;Hong Kong&#39;, &#39;cases&#39;: &#39;1,201,431&#39;, &#39;deaths&#39;: &#39;9,236&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;115&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;157,942&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,214&#39;, &#39;total_tests&#39;: &#39;44,972,952&#39;, &#39;tests_per_1m_population&#39;: &#39;5,912,223&#39;}, {&#39;country_name&#39;: &#39;Singapore&#39;, &#39;cases&#39;: &#39;1,180,124&#39;, &#39;deaths&#39;: &#39;1,325&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,109,387&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;9&#39;, &#39;active_cases&#39;: &#39;69,412&#39;, &#39;total_cases_per_1m_population&#39;: &#39;198,895&#39;, &#39;deaths_per_1m_population&#39;: &#39;223&#39;, &#39;total_tests&#39;: &#39;23,712,995&#39;, &#39;tests_per_1m_population&#39;: &#39;3,996,529&#39;}, {&#39;country_name&#39;: &#39;Morocco&#39;, &#39;cases&#39;: &#39;1,164,670&#39;, &#39;deaths&#39;: &#39;16,065&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,148,154&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;293&#39;, &#39;active_cases&#39;: &#39;451&#39;, &#39;total_cases_per_1m_population&#39;: &#39;30,893&#39;, &#39;deaths_per_1m_population&#39;: &#39;426&#39;, &#39;total_tests&#39;: &#39;11,237,010&#39;, &#39;tests_per_1m_population&#39;: &#39;298,062&#39;}, {&#39;country_name&#39;: &#39;Bulgaria&#39;, &#39;cases&#39;: &#39;1,152,892&#39;, &#39;deaths&#39;: &#39;36,849&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;959,542&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;105&#39;, &#39;active_cases&#39;: &#39;156,501&#39;, &#39;total_cases_per_1m_population&#39;: &#39;168,206&#39;, &#39;deaths_per_1m_population&#39;: &#39;5,376&#39;, &#39;total_tests&#39;: &#39;9,797,011&#39;, &#39;tests_per_1m_population&#39;: &#39;1,429,377&#39;}, {&#39;country_name&#39;: &#39;Croatia&#39;, &#39;cases&#39;: &#39;1,117,175&#39;, &#39;deaths&#39;: &#39;15,778&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,096,829&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;22&#39;, &#39;active_cases&#39;: &#39;4,568&#39;, &#39;total_cases_per_1m_population&#39;: &#39;275,195&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,887&#39;, &#39;total_tests&#39;: &#39;4,762,146&#39;, &#39;tests_per_1m_population&#39;: &#39;1,173,065&#39;}, {&#39;country_name&#39;: &#39;Cuba&#39;, &#39;cases&#39;: &#39;1,101,486&#39;, &#39;deaths&#39;: &#39;8,523&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,091,603&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;23&#39;, &#39;active_cases&#39;: &#39;1,360&#39;, &#39;total_cases_per_1m_population&#39;: &#39;97,355&#39;, &#39;deaths_per_1m_population&#39;: &#39;753&#39;, &#39;total_tests&#39;: &#39;12,920,253&#39;, &#39;tests_per_1m_population&#39;: &#39;1,141,957&#39;}, {&#39;country_name&#39;: &#39;Lebanon&#39;, &#39;cases&#39;: &#39;1,096,320&#39;, &#39;deaths&#39;: &#39;10,374&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,079,455&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;186&#39;, &#39;active_cases&#39;: &#39;6,491&#39;, &#39;total_cases_per_1m_population&#39;: &#39;161,931&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,532&#39;, &#39;total_tests&#39;: &#39;4,795,578&#39;, &#39;tests_per_1m_population&#39;: &#39;708,328&#39;}, {&#39;country_name&#39;: &#39;Lithuania&#39;, &#39;cases&#39;: &#39;1,054,618&#39;, &#39;deaths&#39;: &#39;9,063&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,016,510&#39;, &#39;new_deaths&#39;: &#39;9&#39;, &#39;new_cases&#39;: &#39;427&#39;, &#39;serious_critical&#39;: &#39;31&#39;, &#39;active_cases&#39;: &#39;29,045&#39;, &#39;total_cases_per_1m_population&#39;: &#39;397,407&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,415&#39;, &#39;total_tests&#39;: &#39;8,217,113&#39;, &#39;tests_per_1m_population&#39;: &#39;3,096,414&#39;}, {&#39;country_name&#39;: &#39;Tunisia&#39;, &#39;cases&#39;: &#39;1,039,532&#39;, &#39;deaths&#39;: &#39;28,533&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;29&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;86,327&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,369&#39;, &#39;total_tests&#39;: &#39;4,563,397&#39;, &#39;tests_per_1m_population&#39;: &#39;378,962&#39;}, {&#39;country_name&#39;: &#39;Slovenia&#39;, &#39;cases&#39;: &#39;1,003,970&#39;, &#39;deaths&#39;: &#39;6,576&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;980,501&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;30&#39;, &#39;active_cases&#39;: &#39;16,893&#39;, &#39;total_cases_per_1m_population&#39;: &#39;482,805&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,162&#39;, &#39;total_tests&#39;: &#39;2,640,107&#39;, &#39;tests_per_1m_population&#39;: &#39;1,269,615&#39;}, {&#39;country_name&#39;: &#39;Finland&#39;, &#39;cases&#39;: &#39;1,000,472&#39;, &#39;deaths&#39;: &#39;3,638&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;46,000&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;31&#39;, &#39;active_cases&#39;: &#39;950,834&#39;, &#39;total_cases_per_1m_population&#39;: &#39;180,062&#39;, &#39;deaths_per_1m_population&#39;: &#39;655&#39;, &#39;total_tests&#39;: &#39;10,644,579&#39;, &#39;tests_per_1m_population&#39;: &#39;1,915,782&#39;}, {&#39;country_name&#39;: &#39;Nepal&#39;, &#39;cases&#39;: &#39;978,743&#39;, &#39;deaths&#39;: &#39;11,951&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;966,523&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;11&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;269&#39;, &#39;total_cases_per_1m_population&#39;: &#39;32,535&#39;, &#39;deaths_per_1m_population&#39;: &#39;397&#39;, &#39;total_tests&#39;: &#39;5,616,752&#39;, &#39;tests_per_1m_population&#39;: &#39;186,711&#39;}, {&#39;country_name&#39;: &#39;Belarus&#39;, &#39;cases&#39;: &#39;977,434&#39;, &#39;deaths&#39;: &#39;6,922&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;928,536&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;41,976&#39;, &#39;total_cases_per_1m_population&#39;: &#39;103,501&#39;, &#39;deaths_per_1m_population&#39;: &#39;733&#39;, &#39;total_tests&#39;: &#39;13,092,771&#39;, &#39;tests_per_1m_population&#39;: &#39;1,386,401&#39;}, {&#39;country_name&#39;: &#39;Bolivia&#39;, &#39;cases&#39;: &#39;904,377&#39;, &#39;deaths&#39;: &#39;21,908&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;855,123&#39;, &#39;new_deaths&#39;: &#39;1&#39;, &#39;new_cases&#39;: &#39;83&#39;, &#39;serious_critical&#39;: &#39;220&#39;, &#39;active_cases&#39;: &#39;27,346&#39;, &#39;total_cases_per_1m_population&#39;: &#39;75,614&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,832&#39;, &#39;total_tests&#39;: &#39;2,693,845&#39;, &#39;tests_per_1m_population&#39;: &#39;225,230&#39;}, {&#39;country_name&#39;: &#39;UAE&#39;, &#39;cases&#39;: &#39;897,136&#39;, &#39;deaths&#39;: &#39;2,302&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;879,787&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;244&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;15,047&#39;, &#39;total_cases_per_1m_population&#39;: &#39;88,772&#39;, &#39;deaths_per_1m_population&#39;: &#39;228&#39;, &#39;total_tests&#39;: &#39;154,420,740&#39;, &#39;tests_per_1m_population&#39;: &#39;15,279,961&#39;}, {&#39;country_name&#39;: &#39;Uruguay&#39;, &#39;cases&#39;: &#39;895,775&#39;, &#39;deaths&#39;: &#39;7,197&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;886,654&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;18&#39;, &#39;active_cases&#39;: &#39;1,924&#39;, &#39;total_cases_per_1m_population&#39;: &#39;256,268&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,059&#39;, &#39;total_tests&#39;: &#39;6,091,188&#39;, &#39;tests_per_1m_population&#39;: &#39;1,742,599&#39;}, {&#39;country_name&#39;: &#39;New Zealand&#39;, &#39;cases&#39;: &#39;884,289&#39;, &#39;deaths&#39;: &#39;636&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;824,272&#39;, &#39;new_deaths&#39;: &#39;9&#39;, &#39;new_cases&#39;: &#39;5,714&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;59,381&#39;, &#39;total_cases_per_1m_population&#39;: &#39;176,784&#39;, &#39;deaths_per_1m_population&#39;: &#39;127&#39;, &#39;total_tests&#39;: &#39;6,983,031&#39;, &#39;tests_per_1m_population&#39;: &#39;1,396,020&#39;}, {&#39;country_name&#39;: &#39;Ecuador&#39;, &#39;cases&#39;: &#39;868,053&#39;, &#39;deaths&#39;: &#39;35,581&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;759&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;47,888&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,963&#39;, &#39;total_tests&#39;: &#39;2,470,170&#39;, &#39;tests_per_1m_population&#39;: &#39;136,273&#39;}, {&#39;country_name&#39;: &#39;Costa Rica&#39;, &#39;cases&#39;: &#39;847,784&#39;, &#39;deaths&#39;: &#39;8,383&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;829,515&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;43&#39;, &#39;active_cases&#39;: &#39;9,886&#39;, &#39;total_cases_per_1m_population&#39;: &#39;163,725&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,619&#39;, &#39;total_tests&#39;: &#39;4,240,743&#39;, &#39;tests_per_1m_population&#39;: &#39;818,979&#39;}, {&#39;country_name&#39;: &#39;Guatemala&#39;, &#39;cases&#39;: &#39;841,341&#39;, &#39;deaths&#39;: &#39;17,496&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;821,185&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;5&#39;, &#39;active_cases&#39;: &#39;2,660&#39;, &#39;total_cases_per_1m_population&#39;: &#39;45,444&#39;, &#39;deaths_per_1m_population&#39;: &#39;945&#39;, &#39;total_tests&#39;: &#39;4,402,305&#39;, &#39;tests_per_1m_population&#39;: &#39;237,787&#39;}, {&#39;country_name&#39;: &#39;Latvia&#39;, &#39;cases&#39;: &#39;817,316&#39;, &#39;deaths&#39;: &#39;5,743&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;803,135&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;322&#39;, &#39;serious_critical&#39;: &#39;9&#39;, &#39;active_cases&#39;: &#39;8,438&#39;, &#39;total_cases_per_1m_population&#39;: &#39;442,135&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,107&#39;, &#39;total_tests&#39;: &#39;7,154,016&#39;, &#39;tests_per_1m_population&#39;: &#39;3,870,035&#39;}, {&#39;country_name&#39;: &#39;Azerbaijan&#39;, &#39;cases&#39;: &#39;792,476&#39;, &#39;deaths&#39;: &#39;9,707&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;782,634&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;135&#39;, &#39;total_cases_per_1m_population&#39;: &#39;76,908&#39;, &#39;deaths_per_1m_population&#39;: &#39;942&#39;, &#39;total_tests&#39;: &#39;6,792,132&#39;, &#39;tests_per_1m_population&#39;: &#39;659,165&#39;}, {&#39;country_name&#39;: &#39;Panama&#39;, &#39;cases&#39;: &#39;771,486&#39;, &#39;deaths&#39;: &#39;8,182&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;759,832&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;8&#39;, &#39;active_cases&#39;: &#39;3,472&#39;, &#39;total_cases_per_1m_population&#39;: &#39;173,862&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,844&#39;, &#39;total_tests&#39;: &#39;5,820,472&#39;, &#39;tests_per_1m_population&#39;: &#39;1,311,699&#39;}, {&#39;country_name&#39;: &#39;Saudi Arabia&#39;, &#39;cases&#39;: &#39;753,332&#39;, &#39;deaths&#39;: &#39;9,076&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;740,467&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;45&#39;, &#39;active_cases&#39;: &#39;3,789&#39;, &#39;total_cases_per_1m_population&#39;: &#39;21,047&#39;, &#39;deaths_per_1m_population&#39;: &#39;254&#39;, &#39;total_tests&#39;: &#39;41,817,866&#39;, &#39;tests_per_1m_population&#39;: &#39;1,168,345&#39;}, {&#39;country_name&#39;: &#39;Sri Lanka&#39;, &#39;cases&#39;: &#39;663,131&#39;, &#39;deaths&#39;: &#39;16,502&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;642,574&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;4,055&#39;, &#39;total_cases_per_1m_population&#39;: &#39;30,736&#39;, &#39;deaths_per_1m_population&#39;: &#39;765&#39;, &#39;total_tests&#39;: &#39;6,486,117&#39;, &#39;tests_per_1m_population&#39;: &#39;300,627&#39;}, {&#39;country_name&#39;: &#39;Paraguay&#39;, &#39;cases&#39;: &#39;649,034&#39;, &#39;deaths&#39;: &#39;18,795&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;624,673&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;5&#39;, &#39;active_cases&#39;: &#39;5,566&#39;, &#39;total_cases_per_1m_population&#39;: &#39;89,022&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,578&#39;, &#39;total_tests&#39;: &#39;2,623,300&#39;, &#39;tests_per_1m_population&#39;: &#39;359,816&#39;}, {&#39;country_name&#39;: &#39;Kuwait&#39;, &#39;cases&#39;: &#39;631,294&#39;, &#39;deaths&#39;: &#39;2,555&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;627,899&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;8&#39;, &#39;active_cases&#39;: &#39;840&#39;, &#39;total_cases_per_1m_population&#39;: &#39;143,981&#39;, &#39;deaths_per_1m_population&#39;: &#39;583&#39;, &#39;total_tests&#39;: &#39;7,999,656&#39;, &#39;tests_per_1m_population&#39;: &#39;1,824,506&#39;}, {&#39;country_name&#39;: &#39;Myanmar&#39;, &#39;cases&#39;: &#39;612,733&#39;, &#39;deaths&#39;: &#39;19,434&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;591,609&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1,690&#39;, &#39;total_cases_per_1m_population&#39;: &#39;11,127&#39;, &#39;deaths_per_1m_population&#39;: &#39;353&#39;, &#39;total_tests&#39;: &#39;7,891,077&#39;, &#39;tests_per_1m_population&#39;: &#39;143,296&#39;}, {&#39;country_name&#39;: &#39;Palestine&#39;, &#39;cases&#39;: &#39;581,816&#39;, &#39;deaths&#39;: &#39;5,353&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;575,899&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;17&#39;, &#39;active_cases&#39;: &#39;564&#39;, &#39;total_cases_per_1m_population&#39;: &#39;109,459&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,007&#39;, &#39;total_tests&#39;: &#39;3,078,533&#39;, &#39;tests_per_1m_population&#39;: &#39;579,175&#39;}, {&#39;country_name&#39;: &#39;Dominican Republic&#39;, &#39;cases&#39;: &#39;578,954&#39;, &#39;deaths&#39;: &#39;4,376&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;574,297&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;16&#39;, &#39;active_cases&#39;: &#39;281&#39;, &#39;total_cases_per_1m_population&#39;: &#39;52,421&#39;, &#39;deaths_per_1m_population&#39;: &#39;396&#39;, &#39;total_tests&#39;: &#39;3,261,060&#39;, &#39;tests_per_1m_population&#39;: &#39;295,272&#39;}, {&#39;country_name&#39;: &#39;Estonia&#39;, &#39;cases&#39;: &#39;570,257&#39;, &#39;deaths&#39;: &#39;2,531&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;507,474&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;181&#39;, &#39;serious_critical&#39;: &#39;7&#39;, &#39;active_cases&#39;: &#39;60,252&#39;, &#39;total_cases_per_1m_population&#39;: &#39;429,364&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,906&#39;, &#39;total_tests&#39;: &#39;3,311,935&#39;, &#39;tests_per_1m_population&#39;: &#39;2,493,655&#39;}, {&#39;country_name&#39;: &#39;Bahrain&#39;, &#39;cases&#39;: &#39;565,830&#39;, &#39;deaths&#39;: &#39;1,475&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;560,795&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;3&#39;, &#39;active_cases&#39;: &#39;3,560&#39;, &#39;total_cases_per_1m_population&#39;: &#39;312,916&#39;, &#39;deaths_per_1m_population&#39;: &#39;816&#39;, &#39;total_tests&#39;: &#39;9,695,962&#39;, &#39;tests_per_1m_population&#39;: &#39;5,362,081&#39;}, {&#39;country_name&#39;: &#39;Venezuela&#39;, &#39;cases&#39;: &#39;522,121&#39;, &#39;deaths&#39;: &#39;5,705&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;515,305&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;230&#39;, &#39;active_cases&#39;: &#39;1,111&#39;, &#39;total_cases_per_1m_population&#39;: &#39;18,456&#39;, &#39;deaths_per_1m_population&#39;: &#39;202&#39;, &#39;total_tests&#39;: &#39;3,359,014&#39;, &#39;tests_per_1m_population&#39;: &#39;118,733&#39;}, {&#39;country_name&#39;: &#39;Moldova&#39;, &#39;cases&#39;: &#39;516,986&#39;, &#39;deaths&#39;: &#39;11,489&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;504,142&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;49&#39;, &#39;active_cases&#39;: &#39;1,355&#39;, &#39;total_cases_per_1m_population&#39;: &#39;128,698&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,860&#39;, &#39;total_tests&#39;: &#39;3,216,305&#39;, &#39;tests_per_1m_population&#39;: &#39;800,665&#39;}, {&#39;country_name&#39;: &#39;Egypt&#39;, &#39;cases&#39;: &#39;515,645&#39;, &#39;deaths&#39;: &#39;24,613&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;442,182&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;122&#39;, &#39;active_cases&#39;: &#39;48,850&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,873&#39;, &#39;deaths_per_1m_population&#39;: &#39;233&#39;, &#39;total_tests&#39;: &#39;3,693,367&#39;, &#39;tests_per_1m_population&#39;: &#39;34,903&#39;}, {&#39;country_name&#39;: &#39;Libya&#39;, &#39;cases&#39;: &#39;501,862&#39;, &#39;deaths&#39;: &#39;6,429&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;490,900&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;101&#39;, &#39;active_cases&#39;: &#39;4,533&#39;, &#39;total_cases_per_1m_population&#39;: &#39;71,288&#39;, &#39;deaths_per_1m_population&#39;: &#39;913&#39;, &#39;total_tests&#39;: &#39;2,476,960&#39;, &#39;tests_per_1m_population&#39;: &#39;351,844&#39;}, {&#39;country_name&#39;: &#39;Cyprus&#39;, &#39;cases&#39;: &#39;470,481&#39;, &#39;deaths&#39;: &#39;1,011&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;124,370&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;60&#39;, &#39;active_cases&#39;: &#39;345,100&#39;, &#39;total_cases_per_1m_population&#39;: &#39;384,623&#39;, &#39;deaths_per_1m_population&#39;: &#39;827&#39;, &#39;total_tests&#39;: &#39;9,477,138&#39;, &#39;tests_per_1m_population&#39;: &#39;7,747,665&#39;}, {&#39;country_name&#39;: &#39;Ethiopia&#39;, &#39;cases&#39;: &#39;470,417&#39;, &#39;deaths&#39;: &#39;7,510&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;454,967&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;15&#39;, &#39;active_cases&#39;: &#39;7,940&#39;, &#39;total_cases_per_1m_population&#39;: &#39;3,917&#39;, &#39;deaths_per_1m_population&#39;: &#39;63&#39;, &#39;total_tests&#39;: &#39;4,763,756&#39;, &#39;tests_per_1m_population&#39;: &#39;39,665&#39;}, {&#39;country_name&#39;: &#39;Mongolia&#39;, &#39;cases&#39;: &#39;469,580&#39;, &#39;deaths&#39;: &#39;2,177&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;313,256&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;30&#39;, &#39;serious_critical&#39;: &#39;192&#39;, &#39;active_cases&#39;: &#39;154,147&#39;, &#39;total_cases_per_1m_population&#39;: &#39;139,194&#39;, &#39;deaths_per_1m_population&#39;: &#39;645&#39;, &#39;total_tests&#39;: &#39;4,030,048&#39;, &#39;tests_per_1m_population&#39;: &#39;1,194,595&#39;}, {&#39;country_name&#39;: &#39;Armenia&#39;, &#39;cases&#39;: &#39;422,825&#39;, &#39;deaths&#39;: &#39;8,622&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;410,558&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;3&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;3,645&#39;, &#39;total_cases_per_1m_population&#39;: &#39;142,210&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,900&#39;, &#39;total_tests&#39;: &#39;3,035,104&#39;, &#39;tests_per_1m_population&#39;: &#39;1,020,807&#39;}, {&#39;country_name&#39;: &#39;Honduras&#39;, &#39;cases&#39;: &#39;422,275&#39;, &#39;deaths&#39;: &#39;10,892&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;131,100&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;105&#39;, &#39;active_cases&#39;: &#39;280,283&#39;, &#39;total_cases_per_1m_population&#39;: &#39;41,445&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,069&#39;, &#39;total_tests&#39;: &#39;1,263,329&#39;, &#39;tests_per_1m_population&#39;: &#39;123,991&#39;}, {&#39;country_name&#39;: &#39;Oman&#39;, &#39;cases&#39;: &#39;388,995&#39;, &#39;deaths&#39;: &#39;4,257&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;384,055&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2&#39;, &#39;active_cases&#39;: &#39;683&#39;, &#39;total_cases_per_1m_population&#39;: &#39;72,833&#39;, &#39;deaths_per_1m_population&#39;: &#39;797&#39;, &#39;total_tests&#39;: &#39;25,000,000&#39;, &#39;tests_per_1m_population&#39;: &#39;4,680,828&#39;}, {&#39;country_name&#39;: &#39;Bosnia and Herzegovina&#39;, &#39;cases&#39;: &#39;376,699&#39;, &#39;deaths&#39;: &#39;15,756&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;192,218&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;168,725&#39;, &#39;total_cases_per_1m_population&#39;: &#39;116,122&#39;, &#39;deaths_per_1m_population&#39;: &#39;4,857&#39;, &#39;total_tests&#39;: &#39;1,752,716&#39;, &#39;tests_per_1m_population&#39;: &#39;540,297&#39;}, {&#39;country_name&#39;: &#39;Réunion&#39;, &#39;cases&#39;: &#39;374,295&#39;, &#39;deaths&#39;: &#39;742&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;355,605&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;10&#39;, &#39;active_cases&#39;: &#39;17,948&#39;, &#39;total_cases_per_1m_population&#39;: &#39;412,744&#39;, &#39;deaths_per_1m_population&#39;: &#39;818&#39;, &#39;total_tests&#39;: &#39;1,603,660&#39;, &#39;tests_per_1m_population&#39;: &#39;1,768,393&#39;}, {&#39;country_name&#39;: &#39;Qatar&#39;, &#39;cases&#39;: &#39;364,089&#39;, &#39;deaths&#39;: &#39;677&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;362,568&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;844&#39;, &#39;total_cases_per_1m_population&#39;: &#39;129,670&#39;, &#39;deaths_per_1m_population&#39;: &#39;241&#39;, &#39;total_tests&#39;: &#39;3,425,362&#39;, &#39;tests_per_1m_population&#39;: &#39;1,219,943&#39;}, {&#39;country_name&#39;: &#39;Kenya&#39;, &#39;cases&#39;: &#39;323,696&#39;, &#39;deaths&#39;: &#39;5,649&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;317,909&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;138&#39;, &#39;total_cases_per_1m_population&#39;: &#39;5,790&#39;, &#39;deaths_per_1m_population&#39;: &#39;101&#39;, &#39;total_tests&#39;: &#39;3,581,506&#39;, &#39;tests_per_1m_population&#39;: &#39;64,060&#39;}, {&#39;country_name&#39;: &#39;Zambia&#39;, &#39;cases&#39;: &#39;318,984&#39;, &#39;deaths&#39;: &#39;3,974&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;314,075&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;935&#39;, &#39;total_cases_per_1m_population&#39;: &#39;16,517&#39;, &#39;deaths_per_1m_population&#39;: &#39;206&#39;, &#39;total_tests&#39;: &#39;3,408,441&#39;, &#39;tests_per_1m_population&#39;: &#39;176,487&#39;}, {&#39;country_name&#39;: &#39;North Macedonia&#39;, &#39;cases&#39;: &#39;309,062&#39;, &#39;deaths&#39;: &#39;9,271&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;299,064&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;727&#39;, &#39;total_cases_per_1m_population&#39;: &#39;148,358&#39;, &#39;deaths_per_1m_population&#39;: &#39;4,450&#39;, &#39;total_tests&#39;: &#39;2,007,553&#39;, &#39;tests_per_1m_population&#39;: &#39;963,678&#39;}, {&#39;country_name&#39;: &#39;Botswana&#39;, &#39;cases&#39;: &#39;305,859&#39;, &#39;deaths&#39;: &#39;2,688&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;303,026&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;145&#39;, &#39;total_cases_per_1m_population&#39;: &#39;125,491&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,103&#39;, &#39;total_tests&#39;: &#39;2,026,898&#39;, &#39;tests_per_1m_population&#39;: &#39;831,613&#39;}, {&#39;country_name&#39;: &#39;Albania&#39;, &#39;cases&#39;: &#39;274,791&#39;, &#39;deaths&#39;: &#39;3,496&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;270,869&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2&#39;, &#39;active_cases&#39;: &#39;426&#39;, &#39;total_cases_per_1m_population&#39;: &#39;95,675&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,217&#39;, &#39;total_tests&#39;: &#39;1,799,730&#39;, &#39;tests_per_1m_population&#39;: &#39;626,620&#39;}, {&#39;country_name&#39;: &#39;Algeria&#39;, &#39;cases&#39;: &#39;265,761&#39;, &#39;deaths&#39;: &#39;6,874&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;178,344&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;6&#39;, &#39;active_cases&#39;: &#39;80,543&#39;, &#39;total_cases_per_1m_population&#39;: &#39;5,869&#39;, &#39;deaths_per_1m_population&#39;: &#39;152&#39;, &#39;total_tests&#39;: &#39;230,861&#39;, &#39;tests_per_1m_population&#39;: &#39;5,099&#39;}, {&#39;country_name&#39;: &#39;Nigeria&#39;, &#39;cases&#39;: &#39;255,685&#39;, &#39;deaths&#39;: &#39;3,143&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;249,890&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;11&#39;, &#39;active_cases&#39;: &#39;2,652&#39;, &#39;total_cases_per_1m_population&#39;: &#39;1,187&#39;, &#39;deaths_per_1m_population&#39;: &#39;15&#39;, &#39;total_tests&#39;: &#39;5,036,813&#39;, &#39;tests_per_1m_population&#39;: &#39;23,388&#39;}, {&#39;country_name&#39;: &#39;Zimbabwe&#39;, &#39;cases&#39;: &#39;247,524&#39;, &#39;deaths&#39;: &#39;5,468&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;241,362&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;12&#39;, &#39;active_cases&#39;: &#39;694&#39;, &#39;total_cases_per_1m_population&#39;: &#39;16,227&#39;, &#39;deaths_per_1m_population&#39;: &#39;358&#39;, &#39;total_tests&#39;: &#39;2,240,305&#39;, &#39;tests_per_1m_population&#39;: &#39;146,872&#39;}, {&#39;country_name&#39;: &#39;Uzbekistan&#39;, &#39;cases&#39;: &#39;238,469&#39;, &#39;deaths&#39;: &#39;1,637&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;236,483&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;27&#39;, &#39;serious_critical&#39;: &#39;23&#39;, &#39;active_cases&#39;: &#39;349&#39;, &#39;total_cases_per_1m_population&#39;: &#39;6,943&#39;, &#39;deaths_per_1m_population&#39;: &#39;48&#39;, &#39;total_tests&#39;: &#39;1,377,915&#39;, &#39;tests_per_1m_population&#39;: &#39;40,120&#39;}, {&#39;country_name&#39;: &#39;Montenegro&#39;, &#39;cases&#39;: &#39;234,619&#39;, &#39;deaths&#39;: &#39;2,713&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;231,297&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;6&#39;, &#39;active_cases&#39;: &#39;609&#39;, &#39;total_cases_per_1m_population&#39;: &#39;373,473&#39;, &#39;deaths_per_1m_population&#39;: &#39;4,319&#39;, &#39;total_tests&#39;: &#39;2,444,820&#39;, &#39;tests_per_1m_population&#39;: &#39;3,891,730&#39;}, {&#39;country_name&#39;: &#39;Luxembourg&#39;, &#39;cases&#39;: &#39;233,966&#39;, &#39;deaths&#39;: &#39;1,058&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;221,501&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;11,407&#39;, &#39;total_cases_per_1m_population&#39;: &#39;363,099&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,642&#39;, &#39;total_tests&#39;: &#39;4,213,886&#39;, &#39;tests_per_1m_population&#39;: &#39;6,539,666&#39;}, {&#39;country_name&#39;: &#39;Mozambique&#39;, &#39;cases&#39;: &#39;225,358&#39;, &#39;deaths&#39;: &#39;2,201&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;223,104&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;13&#39;, &#39;active_cases&#39;: &#39;53&#39;, &#39;total_cases_per_1m_population&#39;: &#39;6,863&#39;, &#39;deaths_per_1m_population&#39;: &#39;67&#39;, &#39;total_tests&#39;: &#39;1,308,458&#39;, &#39;tests_per_1m_population&#39;: &#39;39,849&#39;}, {&#39;country_name&#39;: &#39;Laos&#39;, &#39;cases&#39;: &#39;205,975&#39;, &#39;deaths&#39;: &#39;732&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7,660&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;1,082&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;197,583&#39;, &#39;total_cases_per_1m_population&#39;: &#39;27,588&#39;, &#39;deaths_per_1m_population&#39;: &#39;98&#39;, &#39;total_tests&#39;: &#39;1,232,128&#39;, &#39;tests_per_1m_population&#39;: &#39;165,029&#39;}, {&#39;country_name&#39;: &#39;Kyrgyzstan&#39;, &#39;cases&#39;: &#39;200,983&#39;, &#39;deaths&#39;: &#39;2,991&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;196,386&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;131&#39;, &#39;active_cases&#39;: &#39;1,606&#39;, &#39;total_cases_per_1m_population&#39;: &#39;29,915&#39;, &#39;deaths_per_1m_population&#39;: &#39;445&#39;, &#39;total_tests&#39;: &#39;1,907,195&#39;, &#39;tests_per_1m_population&#39;: &#39;283,874&#39;}, {&#39;country_name&#39;: &#39;China&#39;, &#39;cases&#39;: &#39;200,654&#39;, &#39;deaths&#39;: &#39;4,725&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;166,398&#39;, &#39;new_deaths&#39;: &#39;39&#39;, &#39;new_cases&#39;: &#39;1,580&#39;, &#39;serious_critical&#39;: &#39;236&#39;, &#39;active_cases&#39;: &#39;29,531&#39;, &#39;total_cases_per_1m_population&#39;: &#39;139&#39;, &#39;deaths_per_1m_population&#39;: &#39;3&#39;, &#39;total_tests&#39;: &#39;160,000,000&#39;, &#39;tests_per_1m_population&#39;: &#39;111,163&#39;}, {&#39;country_name&#39;: &#39;Iceland&#39;, &#39;cases&#39;: &#39;183,974&#39;, &#39;deaths&#39;: &#39;112&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;75,685&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;108,177&#39;, &#39;total_cases_per_1m_population&#39;: &#39;532,886&#39;, &#39;deaths_per_1m_population&#39;: &#39;324&#39;, &#39;total_tests&#39;: &#39;1,953,616&#39;, &#39;tests_per_1m_population&#39;: &#39;5,658,702&#39;}, {&#39;country_name&#39;: &#39;Maldives&#39;, &#39;cases&#39;: &#39;178,883&#39;, &#39;deaths&#39;: &#39;298&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;163,687&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;25&#39;, &#39;active_cases&#39;: &#39;14,898&#39;, &#39;total_cases_per_1m_population&#39;: &#39;320,737&#39;, &#39;deaths_per_1m_population&#39;: &#39;534&#39;, &#39;total_tests&#39;: &#39;2,213,831&#39;, &#39;tests_per_1m_population&#39;: &#39;3,969,395&#39;}, {&#39;country_name&#39;: &#39;Afghanistan&#39;, &#39;cases&#39;: &#39;178,689&#39;, &#39;deaths&#39;: &#39;7,682&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;161,748&#39;, &#39;new_deaths&#39;: &#39;1&#39;, &#39;new_cases&#39;: &#39;39&#39;, &#39;serious_critical&#39;: &#39;1,124&#39;, &#39;active_cases&#39;: &#39;9,259&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,411&#39;, &#39;deaths_per_1m_population&#39;: &#39;190&#39;, &#39;total_tests&#39;: &#39;940,341&#39;, &#39;tests_per_1m_population&#39;: &#39;23,212&#39;}, {&#39;country_name&#39;: &#39;Uganda&#39;, &#39;cases&#39;: &#39;164,069&#39;, &#39;deaths&#39;: &#39;3,596&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;100,205&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2&#39;, &#39;active_cases&#39;: &#39;60,268&#39;, &#39;total_cases_per_1m_population&#39;: &#39;3,394&#39;, &#39;deaths_per_1m_population&#39;: &#39;74&#39;, &#39;total_tests&#39;: &#39;2,612,795&#39;, &#39;tests_per_1m_population&#39;: &#39;54,043&#39;}, {&#39;country_name&#39;: &#39;El Salvador&#39;, &#39;cases&#39;: &#39;162,089&#39;, &#39;deaths&#39;: &#39;4,127&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;150,662&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;8&#39;, &#39;active_cases&#39;: &#39;7,300&#39;, &#39;total_cases_per_1m_population&#39;: &#39;24,764&#39;, &#39;deaths_per_1m_population&#39;: &#39;631&#39;, &#39;total_tests&#39;: &#39;1,950,448&#39;, &#39;tests_per_1m_population&#39;: &#39;297,993&#39;}, {&#39;country_name&#39;: &#39;Ghana&#39;, &#39;cases&#39;: &#39;161,124&#39;, &#39;deaths&#39;: &#39;1,445&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;159,655&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;24&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,997&#39;, &#39;deaths_per_1m_population&#39;: &#39;45&#39;, &#39;total_tests&#39;: &#39;2,433,244&#39;, &#39;tests_per_1m_population&#39;: &#39;75,465&#39;}, {&#39;country_name&#39;: &#39;Namibia&#39;, &#39;cases&#39;: &#39;158,332&#39;, &#39;deaths&#39;: &#39;4,023&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;153,662&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;647&#39;, &#39;total_cases_per_1m_population&#39;: &#39;60,341&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,533&#39;, &#39;total_tests&#39;: &#39;1,001,354&#39;, &#39;tests_per_1m_population&#39;: &#39;381,621&#39;}, {&#39;country_name&#39;: &#39;Martinique&#39;, &#39;cases&#39;: &#39;147,519&#39;, &#39;deaths&#39;: &#39;918&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;104&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;8&#39;, &#39;active_cases&#39;: &#39;146,497&#39;, &#39;total_cases_per_1m_population&#39;: &#39;393,657&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,450&#39;, &#39;total_tests&#39;: &#39;828,928&#39;, &#39;tests_per_1m_population&#39;: &#39;2,212,008&#39;}, {&#39;country_name&#39;: &#39;Trinidad and Tobago&#39;, &#39;cases&#39;: &#39;144,359&#39;, &#39;deaths&#39;: &#39;3,812&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;133,604&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;18&#39;, &#39;active_cases&#39;: &#39;6,943&#39;, &#39;total_cases_per_1m_population&#39;: &#39;102,552&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,708&#39;, &#39;total_tests&#39;: &#39;696,148&#39;, &#39;tests_per_1m_population&#39;: &#39;494,540&#39;}, {&#39;country_name&#39;: &#39;Brunei&#39;, &#39;cases&#39;: &#39;141,014&#39;, &#39;deaths&#39;: &#39;218&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;139,724&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2&#39;, &#39;active_cases&#39;: &#39;1,072&#39;, &#39;total_cases_per_1m_population&#39;: &#39;316,857&#39;, &#39;deaths_per_1m_population&#39;: &#39;490&#39;, &#39;total_tests&#39;: &#39;717,784&#39;, &#39;tests_per_1m_population&#39;: &#39;1,612,853&#39;}, {&#39;country_name&#39;: &#39;Guadeloupe&#39;, &#39;cases&#39;: &#39;140,130&#39;, &#39;deaths&#39;: &#39;854&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,250&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;19&#39;, &#39;active_cases&#39;: &#39;137,026&#39;, &#39;total_cases_per_1m_population&#39;: &#39;350,108&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,134&#39;, &#39;total_tests&#39;: &#39;938,039&#39;, &#39;tests_per_1m_population&#39;: &#39;2,343,644&#39;}, {&#39;country_name&#39;: &#39;Cambodia&#39;, &#39;cases&#39;: &#39;136,200&#39;, &#39;deaths&#39;: &#39;3,056&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;132,896&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;248&#39;, &#39;total_cases_per_1m_population&#39;: &#39;7,948&#39;, &#39;deaths_per_1m_population&#39;: &#39;178&#39;, &#39;total_tests&#39;: &#39;2,946,965&#39;, &#39;tests_per_1m_population&#39;: &#39;171,969&#39;}, {&#39;country_name&#39;: &#39;Rwanda&#39;, &#39;cases&#39;: &#39;129,764&#39;, &#39;deaths&#39;: &#39;1,458&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;45,522&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;82,784&#39;, &#39;total_cases_per_1m_population&#39;: &#39;9,590&#39;, &#39;deaths_per_1m_population&#39;: &#39;108&#39;, &#39;total_tests&#39;: &#39;5,225,494&#39;, &#39;tests_per_1m_population&#39;: &#39;386,173&#39;}, {&#39;country_name&#39;: &#39;Jamaica&#39;, &#39;cases&#39;: &#39;129,489&#39;, &#39;deaths&#39;: &#39;2,943&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;82,965&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;43,581&#39;, &#39;total_cases_per_1m_population&#39;: &#39;43,387&#39;, &#39;deaths_per_1m_population&#39;: &#39;986&#39;, &#39;total_tests&#39;: &#39;981,688&#39;, &#39;tests_per_1m_population&#39;: &#39;328,929&#39;}, {&#39;country_name&#39;: &#39;Cameroon&#39;, &#39;cases&#39;: &#39;119,780&#39;, &#39;deaths&#39;: &#39;1,927&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;117,791&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;13&#39;, &#39;active_cases&#39;: &#39;62&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,318&#39;, &#39;deaths_per_1m_population&#39;: &#39;69&#39;, &#39;total_tests&#39;: &#39;1,751,774&#39;, &#39;tests_per_1m_population&#39;: &#39;63,154&#39;}, {&#39;country_name&#39;: &#39;Angola&#39;, &#39;cases&#39;: &#39;99,194&#39;, &#39;deaths&#39;: &#39;1,900&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;97,149&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;145&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,858&#39;, &#39;deaths_per_1m_population&#39;: &#39;55&#39;, &#39;total_tests&#39;: &#39;1,499,795&#39;, &#39;tests_per_1m_population&#39;: &#39;43,209&#39;}, {&#39;country_name&#39;: &#39;Malta&#39;, &#39;cases&#39;: &#39;90,595&#39;, &#39;deaths&#39;: &#39;688&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;84,646&#39;, &#39;new_deaths&#39;: &#39;1&#39;, &#39;new_cases&#39;: &#39;196&#39;, &#39;serious_critical&#39;: &#39;4&#39;, &#39;active_cases&#39;: &#39;5,261&#39;, &#39;total_cases_per_1m_population&#39;: &#39;204,196&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,551&#39;, &#39;total_tests&#39;: &#39;1,872,465&#39;, &#39;tests_per_1m_population&#39;: &#39;4,220,438&#39;}, {&#39;country_name&#39;: &#39;DRC&#39;, &#39;cases&#39;: &#39;87,023&#39;, &#39;deaths&#39;: &#39;1,337&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;50,930&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;34,756&#39;, &#39;total_cases_per_1m_population&#39;: &#39;921&#39;, &#39;deaths_per_1m_population&#39;: &#39;14&#39;, &#39;total_tests&#39;: &#39;846,704&#39;, &#39;tests_per_1m_population&#39;: &#39;8,962&#39;}, {&#39;country_name&#39;: &#39;Senegal&#39;, &#39;cases&#39;: &#39;85,984&#39;, &#39;deaths&#39;: &#39;1,966&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;84,001&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;17&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,902&#39;, &#39;deaths_per_1m_population&#39;: &#39;112&#39;, &#39;total_tests&#39;: &#39;1,063,849&#39;, &#39;tests_per_1m_population&#39;: &#39;60,653&#39;}, {&#39;country_name&#39;: &#39;Malawi&#39;, &#39;cases&#39;: &#39;85,747&#39;, &#39;deaths&#39;: &#39;2,633&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;81,938&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;67&#39;, &#39;active_cases&#39;: &#39;1,176&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,283&#39;, &#39;deaths_per_1m_population&#39;: &#39;132&#39;, &#39;total_tests&#39;: &#39;571,585&#39;, &#39;tests_per_1m_population&#39;: &#39;28,548&#39;}, {&#39;country_name&#39;: &#39;Ivory Coast&#39;, &#39;cases&#39;: &#39;81,887&#39;, &#39;deaths&#39;: &#39;799&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;81,061&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;27&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,972&#39;, &#39;deaths_per_1m_population&#39;: &#39;29&#39;, &#39;total_tests&#39;: &#39;1,494,624&#39;, &#39;tests_per_1m_population&#39;: &#39;54,238&#39;}, {&#39;country_name&#39;: &#39;French Guiana&#39;, &#39;cases&#39;: &#39;80,422&#39;, &#39;deaths&#39;: &#39;394&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;11,254&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;68,774&#39;, &#39;total_cases_per_1m_population&#39;: &#39;257,228&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,260&#39;, &#39;total_tests&#39;: &#39;622,646&#39;, &#39;tests_per_1m_population&#39;: &#39;1,991,518&#39;}, {&#39;country_name&#39;: &#39;Suriname&#39;, &#39;cases&#39;: &#39;79,302&#39;, &#39;deaths&#39;: &#39;1,327&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;49,396&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;28,579&#39;, &#39;total_cases_per_1m_population&#39;: &#39;133,030&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,226&#39;, &#39;total_tests&#39;: &#39;235,824&#39;, &#39;tests_per_1m_population&#39;: &#39;395,598&#39;}, {&#39;country_name&#39;: &#39;Channel Islands&#39;, &#39;cases&#39;: &#39;73,609&#39;, &#39;deaths&#39;: &#39;166&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;72,059&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1,384&#39;, &#39;total_cases_per_1m_population&#39;: &#39;416,444&#39;, &#39;deaths_per_1m_population&#39;: &#39;939&#39;, &#39;total_tests&#39;: &#39;1,252,808&#39;, &#39;tests_per_1m_population&#39;: &#39;7,087,782&#39;}, {&#39;country_name&#39;: &#39;French Polynesia&#39;, &#39;cases&#39;: &#39;72,648&#39;, &#39;deaths&#39;: &#39;648&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;7&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;255,948&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,283&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Eswatini&#39;, &#39;cases&#39;: &#39;70,284&#39;, &#39;deaths&#39;: &#39;1,397&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;68,764&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;11&#39;, &#39;active_cases&#39;: &#39;123&#39;, &#39;total_cases_per_1m_population&#39;: &#39;59,470&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,182&#39;, &#39;total_tests&#39;: &#39;1,012,397&#39;, &#39;tests_per_1m_population&#39;: &#39;856,623&#39;}, {&#39;country_name&#39;: &#39;Barbados&#39;, &#39;cases&#39;: &#39;67,256&#39;, &#39;deaths&#39;: &#39;389&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;63,424&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;3,443&#39;, &#39;total_cases_per_1m_population&#39;: &#39;233,520&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,351&#39;, &#39;total_tests&#39;: &#39;640,085&#39;, &#39;tests_per_1m_population&#39;: &#39;2,222,440&#39;}, {&#39;country_name&#39;: &#39;Fiji&#39;, &#39;cases&#39;: &#39;64,524&#39;, &#39;deaths&#39;: &#39;862&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;62,677&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;985&#39;, &#39;total_cases_per_1m_population&#39;: &#39;71,048&#39;, &#39;deaths_per_1m_population&#39;: &#39;949&#39;, &#39;total_tests&#39;: &#39;506,642&#39;, &#39;tests_per_1m_population&#39;: &#39;557,871&#39;}, {&#39;country_name&#39;: &#39;Madagascar&#39;, &#39;cases&#39;: &#39;64,121&#39;, &#39;deaths&#39;: &#39;1,391&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;59,370&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;14&#39;, &#39;active_cases&#39;: &#39;3,360&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,213&#39;, &#39;deaths_per_1m_population&#39;: &#39;48&#39;, &#39;total_tests&#39;: &#39;418,849&#39;, &#39;tests_per_1m_population&#39;: &#39;14,455&#39;}, {&#39;country_name&#39;: &#39;Guyana&#39;, &#39;cases&#39;: &#39;63,413&#39;, &#39;deaths&#39;: &#39;1,228&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;62,092&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;93&#39;, &#39;total_cases_per_1m_population&#39;: &#39;79,925&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,548&#39;, &#39;total_tests&#39;: &#39;590,638&#39;, &#39;tests_per_1m_population&#39;: &#39;744,436&#39;}, {&#39;country_name&#39;: &#39;Sudan&#39;, &#39;cases&#39;: &#39;62,093&#39;, &#39;deaths&#39;: &#39;4,930&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;1,359&#39;, &#39;deaths_per_1m_population&#39;: &#39;108&#39;, &#39;total_tests&#39;: &#39;562,941&#39;, &#39;tests_per_1m_population&#39;: &#39;12,319&#39;}, {&#39;country_name&#39;: &#39;New Caledonia&#39;, &#39;cases&#39;: &#39;60,457&#39;, &#39;deaths&#39;: &#39;312&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;60,064&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;9&#39;, &#39;active_cases&#39;: &#39;81&#39;, &#39;total_cases_per_1m_population&#39;: &#39;208,148&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,074&#39;, &#39;total_tests&#39;: &#39;98,964&#39;, &#39;tests_per_1m_population&#39;: &#39;340,724&#39;}, {&#39;country_name&#39;: &#39;Mauritania&#39;, &#39;cases&#39;: &#39;58,683&#39;, &#39;deaths&#39;: &#39;982&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;57,693&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;8&#39;, &#39;total_cases_per_1m_population&#39;: &#39;12,050&#39;, &#39;deaths_per_1m_population&#39;: &#39;202&#39;, &#39;total_tests&#39;: &#39;799,187&#39;, &#39;tests_per_1m_population&#39;: &#39;164,099&#39;}, {&#39;country_name&#39;: &#39;Bhutan&#39;, &#39;cases&#39;: &#39;57,771&#39;, &#39;deaths&#39;: &#39;20&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;53,080&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;431&#39;, &#39;serious_critical&#39;: &#39;3&#39;, &#39;active_cases&#39;: &#39;4,671&#39;, &#39;total_cases_per_1m_population&#39;: &#39;73,412&#39;, &#39;deaths_per_1m_population&#39;: &#39;25&#39;, &#39;total_tests&#39;: &#39;2,284,301&#39;, &#39;tests_per_1m_population&#39;: &#39;2,902,749&#39;}, {&#39;country_name&#39;: &#39;Belize&#39;, &#39;cases&#39;: &#39;57,419&#39;, &#39;deaths&#39;: &#39;676&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;56,534&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;6&#39;, &#39;active_cases&#39;: &#39;209&#39;, &#39;total_cases_per_1m_population&#39;: &#39;139,823&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,646&#39;, &#39;total_tests&#39;: &#39;534,770&#39;, &#39;tests_per_1m_population&#39;: &#39;1,302,237&#39;}, {&#39;country_name&#39;: &#39;Taiwan&#39;, &#39;cases&#39;: &#39;56,468&#39;, &#39;deaths&#39;: &#39;856&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;23,729&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;5,172&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;31,883&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,363&#39;, &#39;deaths_per_1m_population&#39;: &#39;36&#39;, &#39;total_tests&#39;: &#39;14,289,370&#39;, &#39;tests_per_1m_population&#39;: &#39;598,017&#39;}, {&#39;country_name&#39;: &#39;Cabo Verde&#39;, &#39;cases&#39;: &#39;56,004&#39;, &#39;deaths&#39;: &#39;401&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;55,538&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;23&#39;, &#39;active_cases&#39;: &#39;65&#39;, &#39;total_cases_per_1m_population&#39;: &#39;98,792&#39;, &#39;deaths_per_1m_population&#39;: &#39;707&#39;, &#39;total_tests&#39;: &#39;400,982&#39;, &#39;tests_per_1m_population&#39;: &#39;707,340&#39;}, {&#39;country_name&#39;: &#39;Syria&#39;, &#39;cases&#39;: &#39;55,795&#39;, &#39;deaths&#39;: &#39;3,150&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;52,090&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;555&#39;, &#39;total_cases_per_1m_population&#39;: &#39;3,054&#39;, &#39;deaths_per_1m_population&#39;: &#39;172&#39;, &#39;total_tests&#39;: &#39;146,269&#39;, &#39;tests_per_1m_population&#39;: &#39;8,007&#39;}, {&#39;country_name&#39;: &#39;Gabon&#39;, &#39;cases&#39;: &#39;47,597&#39;, &#39;deaths&#39;: &#39;303&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;47,282&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;12&#39;, &#39;total_cases_per_1m_population&#39;: &#39;20,512&#39;, &#39;deaths_per_1m_population&#39;: &#39;131&#39;, &#39;total_tests&#39;: &#39;1,592,483&#39;, &#39;tests_per_1m_population&#39;: &#39;686,270&#39;}, {&#39;country_name&#39;: &#39;Papua New Guinea&#39;, &#39;cases&#39;: &#39;43,732&#39;, &#39;deaths&#39;: &#39;649&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;43,025&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;7&#39;, &#39;active_cases&#39;: &#39;58&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,726&#39;, &#39;deaths_per_1m_population&#39;: &#39;70&#39;, &#39;total_tests&#39;: &#39;249,149&#39;, &#39;tests_per_1m_population&#39;: &#39;26,927&#39;}, {&#39;country_name&#39;: &#39;Seychelles&#39;, &#39;cases&#39;: &#39;42,079&#39;, &#39;deaths&#39;: &#39;165&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;41,260&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;654&#39;, &#39;total_cases_per_1m_population&#39;: &#39;423,134&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,659&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Curaçao&#39;, &#39;cases&#39;: &#39;41,966&#39;, &#39;deaths&#39;: &#39;273&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;41,251&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;3&#39;, &#39;active_cases&#39;: &#39;442&#39;, &#39;total_cases_per_1m_population&#39;: &#39;253,872&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,652&#39;, &#39;total_tests&#39;: &#39;496,693&#39;, &#39;tests_per_1m_population&#39;: &#39;3,004,725&#39;}, {&#39;country_name&#39;: &#39;Andorra&#39;, &#39;cases&#39;: &#39;41,013&#39;, &#39;deaths&#39;: &#39;153&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;40,343&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;14&#39;, &#39;active_cases&#39;: &#39;517&#39;, &#39;total_cases_per_1m_population&#39;: &#39;529,282&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,974&#39;, &#39;total_tests&#39;: &#39;249,838&#39;, &#39;tests_per_1m_population&#39;: &#39;3,224,215&#39;}, {&#39;country_name&#39;: &#39;Burundi&#39;, &#39;cases&#39;: &#39;38,887&#39;, &#39;deaths&#39;: &#39;38&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;773&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;38,076&#39;, &#39;total_cases_per_1m_population&#39;: &#39;3,104&#39;, &#39;deaths_per_1m_population&#39;: &#39;3&#39;, &#39;total_tests&#39;: &#39;345,742&#39;, &#39;tests_per_1m_population&#39;: &#39;27,594&#39;}, {&#39;country_name&#39;: &#39;Mauritius&#39;, &#39;cases&#39;: &#39;37,656&#39;, &#39;deaths&#39;: &#39;990&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;35,656&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1,010&#39;, &#39;total_cases_per_1m_population&#39;: &#39;29,521&#39;, &#39;deaths_per_1m_population&#39;: &#39;776&#39;, &#39;total_tests&#39;: &#39;358,675&#39;, &#39;tests_per_1m_population&#39;: &#39;281,186&#39;}, {&#39;country_name&#39;: &#39;Mayotte&#39;, &#39;cases&#39;: &#39;37,038&#39;, &#39;deaths&#39;: &#39;187&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,964&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;33,887&#39;, &#39;total_cases_per_1m_population&#39;: &#39;130,099&#39;, &#39;deaths_per_1m_population&#39;: &#39;657&#39;, &#39;total_tests&#39;: &#39;176,919&#39;, &#39;tests_per_1m_population&#39;: &#39;621,442&#39;}, {&#39;country_name&#39;: &#39;Togo&#39;, &#39;cases&#39;: &#39;36,977&#39;, &#39;deaths&#39;: &#39;273&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;36,679&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;25&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,285&#39;, &#39;deaths_per_1m_population&#39;: &#39;32&#39;, &#39;total_tests&#39;: &#39;727,740&#39;, &#39;tests_per_1m_population&#39;: &#39;84,338&#39;}, {&#39;country_name&#39;: &#39;Guinea&#39;, &#39;cases&#39;: &#39;36,459&#39;, &#39;deaths&#39;: &#39;440&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;35,976&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;8&#39;, &#39;active_cases&#39;: &#39;43&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,647&#39;, &#39;deaths_per_1m_population&#39;: &#39;32&#39;, &#39;total_tests&#39;: &#39;660,107&#39;, &#39;tests_per_1m_population&#39;: &#39;47,919&#39;}, {&#39;country_name&#39;: &#39;Faeroe Islands&#39;, &#39;cases&#39;: &#39;34,658&#39;, &#39;deaths&#39;: &#39;28&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7,693&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;5&#39;, &#39;active_cases&#39;: &#39;26,937&#39;, &#39;total_cases_per_1m_population&#39;: &#39;704,460&#39;, &#39;deaths_per_1m_population&#39;: &#39;569&#39;, &#39;total_tests&#39;: &#39;778,000&#39;, &#39;tests_per_1m_population&#39;: &#39;15,813,651&#39;}, {&#39;country_name&#39;: &#39;Aruba&#39;, &#39;cases&#39;: &#39;34,589&#39;, &#39;deaths&#39;: &#39;212&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;34,251&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2&#39;, &#39;active_cases&#39;: &#39;126&#39;, &#39;total_cases_per_1m_population&#39;: &#39;321,507&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,971&#39;, &#39;total_tests&#39;: &#39;177,885&#39;, &#39;tests_per_1m_population&#39;: &#39;1,653,452&#39;}, {&#39;country_name&#39;: &#39;Tanzania&#39;, &#39;cases&#39;: &#39;33,864&#39;, &#39;deaths&#39;: &#39;803&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;7&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;539&#39;, &#39;deaths_per_1m_population&#39;: &#39;13&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Bahamas&#39;, &#39;cases&#39;: &#39;33,463&#39;, &#39;deaths&#39;: &#39;789&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;32,310&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;11&#39;, &#39;active_cases&#39;: &#39;364&#39;, &#39;total_cases_per_1m_population&#39;: &#39;83,652&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,972&#39;, &#39;total_tests&#39;: &#39;229,817&#39;, &#39;tests_per_1m_population&#39;: &#39;574,504&#39;}, {&#39;country_name&#39;: &#39;Lesotho&#39;, &#39;cases&#39;: &#39;32,910&#39;, &#39;deaths&#39;: &#39;697&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;24,155&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;8,058&#39;, &#39;total_cases_per_1m_population&#39;: &#39;15,146&#39;, &#39;deaths_per_1m_population&#39;: &#39;321&#39;, &#39;total_tests&#39;: &#39;431,221&#39;, &#39;tests_per_1m_population&#39;: &#39;198,454&#39;}, {&#39;country_name&#39;: &#39;Mali&#39;, &#39;cases&#39;: &#39;30,727&#39;, &#39;deaths&#39;: &#39;731&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;29,795&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;201&#39;, &#39;total_cases_per_1m_population&#39;: &#39;1,442&#39;, &#39;deaths_per_1m_population&#39;: &#39;34&#39;, &#39;total_tests&#39;: &#39;663,805&#39;, &#39;tests_per_1m_population&#39;: &#39;31,160&#39;}, {&#39;country_name&#39;: &#39;Haiti&#39;, &#39;cases&#39;: &#39;30,640&#39;, &#39;deaths&#39;: &#39;835&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;29,389&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;416&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,629&#39;, &#39;deaths_per_1m_population&#39;: &#39;72&#39;, &#39;total_tests&#39;: &#39;132,422&#39;, &#39;tests_per_1m_population&#39;: &#39;11,363&#39;}, {&#39;country_name&#39;: &#39;Isle of Man&#39;, &#39;cases&#39;: &#39;28,416&#39;, &#39;deaths&#39;: &#39;87&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;26,794&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1,535&#39;, &#39;total_cases_per_1m_population&#39;: &#39;331,015&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,013&#39;, &#39;total_tests&#39;: &#39;150,753&#39;, &#39;tests_per_1m_population&#39;: &#39;1,756,107&#39;}, {&#39;country_name&#39;: &#39;Benin&#39;, &#39;cases&#39;: &#39;26,952&#39;, &#39;deaths&#39;: &#39;163&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;25,506&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;5&#39;, &#39;active_cases&#39;: &#39;1,283&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,123&#39;, &#39;deaths_per_1m_population&#39;: &#39;13&#39;, &#39;total_tests&#39;: &#39;604,310&#39;, &#39;tests_per_1m_population&#39;: &#39;47,598&#39;}, {&#39;country_name&#39;: &#39;Somalia&#39;, &#39;cases&#39;: &#39;26,485&#39;, &#39;deaths&#39;: &#39;1,350&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;13,182&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;11,953&#39;, &#39;total_cases_per_1m_population&#39;: &#39;1,587&#39;, &#39;deaths_per_1m_population&#39;: &#39;81&#39;, &#39;total_tests&#39;: &#39;400,466&#39;, &#39;tests_per_1m_population&#39;: &#39;23,990&#39;}, {&#39;country_name&#39;: &#39;Congo&#39;, &#39;cases&#39;: &#39;24,079&#39;, &#39;deaths&#39;: &#39;385&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;20,178&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;3,516&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,178&#39;, &#39;deaths_per_1m_population&#39;: &#39;67&#39;, &#39;total_tests&#39;: &#39;347,815&#39;, &#39;tests_per_1m_population&#39;: &#39;60,352&#39;}, {&#39;country_name&#39;: &#39;Saint Lucia&#39;, &#39;cases&#39;: &#39;23,239&#39;, &#39;deaths&#39;: &#39;368&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;22,736&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;135&#39;, &#39;total_cases_per_1m_population&#39;: &#39;125,520&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,988&#39;, &#39;total_tests&#39;: &#39;142,630&#39;, &#39;tests_per_1m_population&#39;: &#39;770,382&#39;}, {&#39;country_name&#39;: &#39;Timor-Leste&#39;, &#39;cases&#39;: &#39;22,860&#39;, &#39;deaths&#39;: &#39;130&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;22,714&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;16&#39;, &#39;total_cases_per_1m_population&#39;: &#39;16,762&#39;, &#39;deaths_per_1m_population&#39;: &#39;95&#39;, &#39;total_tests&#39;: &#39;261,007&#39;, &#39;tests_per_1m_population&#39;: &#39;191,388&#39;}, {&#39;country_name&#39;: &#39;Cayman Islands&#39;, &#39;cases&#39;: &#39;21,755&#39;, &#39;deaths&#39;: &#39;26&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;8,553&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;13,176&#39;, &#39;total_cases_per_1m_population&#39;: &#39;324,145&#39;, &#39;deaths_per_1m_population&#39;: &#39;387&#39;, &#39;total_tests&#39;: &#39;222,773&#39;, &#39;tests_per_1m_population&#39;: &#39;3,319,273&#39;}, {&#39;country_name&#39;: &#39;Burkina Faso&#39;, &#39;cases&#39;: &#39;20,853&#39;, &#39;deaths&#39;: &#39;382&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;20,439&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;32&#39;, &#39;total_cases_per_1m_population&#39;: &#39;951&#39;, &#39;deaths_per_1m_population&#39;: &#39;17&#39;, &#39;total_tests&#39;: &#39;248,995&#39;, &#39;tests_per_1m_population&#39;: &#39;11,350&#39;}, {&#39;country_name&#39;: &#39;Nicaragua&#39;, &#39;cases&#39;: &#39;18,491&#39;, &#39;deaths&#39;: &#39;225&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;4,225&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;14,041&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,733&#39;, &#39;deaths_per_1m_population&#39;: &#39;33&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Gibraltar&#39;, &#39;cases&#39;: &#39;17,706&#39;, &#39;deaths&#39;: &#39;102&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;16,579&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1,025&#39;, &#39;total_cases_per_1m_population&#39;: &#39;525,822&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,029&#39;, &#39;total_tests&#39;: &#39;534,283&#39;, &#39;tests_per_1m_population&#39;: &#39;15,866,807&#39;}, {&#39;country_name&#39;: &#39;South Sudan&#39;, &#39;cases&#39;: &#39;17,422&#39;, &#39;deaths&#39;: &#39;138&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;13,514&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;3,770&#39;, &#39;total_cases_per_1m_population&#39;: &#39;1,524&#39;, &#39;deaths_per_1m_population&#39;: &#39;12&#39;, &#39;total_tests&#39;: &#39;376,391&#39;, &#39;tests_per_1m_population&#39;: &#39;32,928&#39;}, {&#39;country_name&#39;: &#39;Tajikistan&#39;, &#39;cases&#39;: &#39;17,388&#39;, &#39;deaths&#39;: &#39;124&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;17,264&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;1,752&#39;, &#39;deaths_per_1m_population&#39;: &#39;12&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Liechtenstein&#39;, &#39;cases&#39;: &#39;17,103&#39;, &#39;deaths&#39;: &#39;85&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;16,831&#39;, &#39;new_deaths&#39;: &#39;1&#39;, &#39;new_cases&#39;: &#39;12&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;187&#39;, &#39;total_cases_per_1m_population&#39;: &#39;446,251&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,218&#39;, &#39;total_tests&#39;: &#39;102,174&#39;, &#39;tests_per_1m_population&#39;: &#39;2,665,919&#39;}, {&#39;country_name&#39;: &#39;San Marino&#39;, &#39;cases&#39;: &#39;16,140&#39;, &#39;deaths&#39;: &#39;114&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;15,662&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;4&#39;, &#39;active_cases&#39;: &#39;364&#39;, &#39;total_cases_per_1m_population&#39;: &#39;473,870&#39;, &#39;deaths_per_1m_population&#39;: &#39;3,347&#39;, &#39;total_tests&#39;: &#39;149,271&#39;, &#39;tests_per_1m_population&#39;: &#39;4,382,590&#39;}, {&#39;country_name&#39;: &#39;Equatorial Guinea&#39;, &#39;cases&#39;: &#39;15,907&#39;, &#39;deaths&#39;: &#39;183&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;15,698&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;5&#39;, &#39;active_cases&#39;: &#39;26&#39;, &#39;total_cases_per_1m_population&#39;: &#39;10,704&#39;, &#39;deaths_per_1m_population&#39;: &#39;123&#39;, &#39;total_tests&#39;: &#39;310,972&#39;, &#39;tests_per_1m_population&#39;: &#39;209,251&#39;}, {&#39;country_name&#39;: &#39;Djibouti&#39;, &#39;cases&#39;: &#39;15,611&#39;, &#39;deaths&#39;: &#39;189&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;15,411&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;11&#39;, &#39;total_cases_per_1m_population&#39;: &#39;15,396&#39;, &#39;deaths_per_1m_population&#39;: &#39;186&#39;, &#39;total_tests&#39;: &#39;303,924&#39;, &#39;tests_per_1m_population&#39;: &#39;299,748&#39;}, {&#39;country_name&#39;: &#39;CAR&#39;, &#39;cases&#39;: &#39;14,649&#39;, &#39;deaths&#39;: &#39;113&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;6,859&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2&#39;, &#39;active_cases&#39;: &#39;7,677&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,941&#39;, &#39;deaths_per_1m_population&#39;: &#39;23&#39;, &#39;total_tests&#39;: &#39;81,294&#39;, &#39;tests_per_1m_population&#39;: &#39;16,320&#39;}, {&#39;country_name&#39;: &#39;Grenada&#39;, &#39;cases&#39;: &#39;14,428&#39;, &#39;deaths&#39;: &#39;220&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;13,945&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;4&#39;, &#39;active_cases&#39;: &#39;263&#39;, &#39;total_cases_per_1m_population&#39;: &#39;127,159&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,939&#39;, &#39;total_tests&#39;: &#39;148,567&#39;, &#39;tests_per_1m_population&#39;: &#39;1,309,376&#39;}, {&#39;country_name&#39;: &#39;Bermuda&#39;, &#39;cases&#39;: &#39;13,143&#39;, &#39;deaths&#39;: &#39;131&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;12,719&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;293&#39;, &#39;total_cases_per_1m_population&#39;: &#39;212,453&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,118&#39;, &#39;total_tests&#39;: &#39;866,313&#39;, &#39;tests_per_1m_population&#39;: &#39;14,003,734&#39;}, {&#39;country_name&#39;: &#39;Solomon Islands&#39;, &#39;cases&#39;: &#39;12,437&#39;, &#39;deaths&#39;: &#39;139&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;11,194&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2&#39;, &#39;active_cases&#39;: &#39;1,104&#39;, &#39;total_cases_per_1m_population&#39;: &#39;17,339&#39;, &#39;deaths_per_1m_population&#39;: &#39;194&#39;, &#39;total_tests&#39;: &#39;5,117&#39;, &#39;tests_per_1m_population&#39;: &#39;7,134&#39;}, {&#39;country_name&#39;: &#39;Dominica&#39;, &#39;cases&#39;: &#39;12,011&#39;, &#39;deaths&#39;: &#39;63&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;11,926&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;22&#39;, &#39;total_cases_per_1m_population&#39;: &#39;166,107&#39;, &#39;deaths_per_1m_population&#39;: &#39;871&#39;, &#39;total_tests&#39;: &#39;187,690&#39;, &#39;tests_per_1m_population&#39;: &#39;2,595,666&#39;}, {&#39;country_name&#39;: &#39;Gambia&#39;, &#39;cases&#39;: &#39;11,995&#39;, &#39;deaths&#39;: &#39;365&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;11,591&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;39&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,724&#39;, &#39;deaths_per_1m_population&#39;: &#39;144&#39;, &#39;total_tests&#39;: &#39;155,686&#39;, &#39;tests_per_1m_population&#39;: &#39;61,314&#39;}, {&#39;country_name&#39;: &#39;Greenland&#39;, &#39;cases&#39;: &#39;11,971&#39;, &#39;deaths&#39;: &#39;21&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,761&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;4&#39;, &#39;active_cases&#39;: &#39;9,189&#39;, &#39;total_cases_per_1m_population&#39;: &#39;210,209&#39;, &#39;deaths_per_1m_population&#39;: &#39;369&#39;, &#39;total_tests&#39;: &#39;164,926&#39;, &#39;tests_per_1m_population&#39;: &#39;2,896,081&#39;}, {&#39;country_name&#39;: &#39;Yemen&#39;, &#39;cases&#39;: &#39;11,818&#39;, &#39;deaths&#39;: &#39;2,148&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;9,001&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;23&#39;, &#39;active_cases&#39;: &#39;669&#39;, &#39;total_cases_per_1m_population&#39;: &#39;381&#39;, &#39;deaths_per_1m_population&#39;: &#39;69&#39;, &#39;total_tests&#39;: &#39;265,253&#39;, &#39;tests_per_1m_population&#39;: &#39;8,553&#39;}, {&#39;country_name&#39;: &#39;Monaco&#39;, &#39;cases&#39;: &#39;11,604&#39;, &#39;deaths&#39;: &#39;54&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;11,362&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;4&#39;, &#39;active_cases&#39;: &#39;188&#39;, &#39;total_cases_per_1m_population&#39;: &#39;291,969&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,359&#39;, &#39;total_tests&#39;: &#39;54,960&#39;, &#39;tests_per_1m_population&#39;: &#39;1,382,850&#39;}, {&#39;country_name&#39;: &#39;Saint Martin&#39;, &#39;cases&#39;: &#39;10,279&#39;, &#39;deaths&#39;: &#39;63&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,399&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;7&#39;, &#39;active_cases&#39;: &#39;8,817&#39;, &#39;total_cases_per_1m_population&#39;: &#39;257,903&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,581&#39;, &#39;total_tests&#39;: &#39;112,382&#39;, &#39;tests_per_1m_population&#39;: &#39;2,819,701&#39;}, {&#39;country_name&#39;: &#39;Sint Maarten&#39;, &#39;cases&#39;: &#39;9,990&#39;, &#39;deaths&#39;: &#39;86&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;9,841&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;10&#39;, &#39;active_cases&#39;: &#39;63&#39;, &#39;total_cases_per_1m_population&#39;: &#39;228,317&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,965&#39;, &#39;total_tests&#39;: &#39;62,056&#39;, &#39;tests_per_1m_population&#39;: &#39;1,418,261&#39;}, {&#39;country_name&#39;: &#39;Eritrea&#39;, &#39;cases&#39;: &#39;9,733&#39;, &#39;deaths&#39;: &#39;103&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;9,629&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1&#39;, &#39;total_cases_per_1m_population&#39;: &#39;2,678&#39;, &#39;deaths_per_1m_population&#39;: &#39;28&#39;, &#39;total_tests&#39;: &#39;23,693&#39;, &#39;tests_per_1m_population&#39;: &#39;6,518&#39;}, {&#39;country_name&#39;: &#39;Caribbean Netherlands&#39;, &#39;cases&#39;: &#39;9,592&#39;, &#39;deaths&#39;: &#39;34&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;9,392&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;166&#39;, &#39;total_cases_per_1m_population&#39;: &#39;359,749&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,275&#39;, &#39;total_tests&#39;: &#39;30,126&#39;, &#39;tests_per_1m_population&#39;: &#39;1,129,880&#39;}, {&#39;country_name&#39;: &#39;Tonga&#39;, &#39;cases&#39;: &#39;9,553&#39;, &#39;deaths&#39;: &#39;11&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;8,306&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1,236&#39;, &#39;total_cases_per_1m_population&#39;: &#39;88,571&#39;, &#39;deaths_per_1m_population&#39;: &#39;102&#39;, &#39;total_tests&#39;: &#39;408,213&#39;, &#39;tests_per_1m_population&#39;: &#39;3,784,761&#39;}, {&#39;country_name&#39;: &#39;Niger&#39;, &#39;cases&#39;: &#39;8,914&#39;, &#39;deaths&#39;: &#39;309&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;8,507&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;98&#39;, &#39;total_cases_per_1m_population&#39;: &#39;346&#39;, &#39;deaths_per_1m_population&#39;: &#39;12&#39;, &#39;total_tests&#39;: &#39;249,026&#39;, &#39;tests_per_1m_population&#39;: &#39;9,657&#39;}, {&#39;country_name&#39;: &#39;Guinea-Bissau&#39;, &#39;cases&#39;: &#39;8,185&#39;, &#39;deaths&#39;: &#39;171&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7,515&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;6&#39;, &#39;active_cases&#39;: &#39;499&#39;, &#39;total_cases_per_1m_population&#39;: &#39;3,989&#39;, &#39;deaths_per_1m_population&#39;: &#39;83&#39;, &#39;total_tests&#39;: &#39;132,611&#39;, &#39;tests_per_1m_population&#39;: &#39;64,628&#39;}, {&#39;country_name&#39;: &#39;Comoros&#39;, &#39;cases&#39;: &#39;8,100&#39;, &#39;deaths&#39;: &#39;160&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7,933&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;7&#39;, &#39;total_cases_per_1m_population&#39;: &#39;8,970&#39;, &#39;deaths_per_1m_population&#39;: &#39;177&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Sierra Leone&#39;, &#39;cases&#39;: &#39;7,681&#39;, &#39;deaths&#39;: &#39;125&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;929&#39;, &#39;deaths_per_1m_population&#39;: &#39;15&#39;, &#39;total_tests&#39;: &#39;259,958&#39;, &#39;tests_per_1m_population&#39;: &#39;31,435&#39;}, {&#39;country_name&#39;: &#39;Antigua and Barbuda&#39;, &#39;cases&#39;: &#39;7,571&#39;, &#39;deaths&#39;: &#39;135&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7,402&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;34&#39;, &#39;total_cases_per_1m_population&#39;: &#39;76,172&#39;, &#39;deaths_per_1m_population&#39;: &#39;1,358&#39;, &#39;total_tests&#39;: &#39;18,901&#39;, &#39;tests_per_1m_population&#39;: &#39;190,164&#39;}, {&#39;country_name&#39;: &#39;Liberia&#39;, &#39;cases&#39;: &#39;7,432&#39;, &#39;deaths&#39;: &#39;294&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,747&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;2&#39;, &#39;active_cases&#39;: &#39;1,391&#39;, &#39;total_cases_per_1m_population&#39;: &#39;1,410&#39;, &#39;deaths_per_1m_population&#39;: &#39;56&#39;, &#39;total_tests&#39;: &#39;139,824&#39;, &#39;tests_per_1m_population&#39;: &#39;26,521&#39;}, {&#39;country_name&#39;: &#39;Chad&#39;, &#39;cases&#39;: &#39;7,396&#39;, &#39;deaths&#39;: &#39;193&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;4,874&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;2,329&#39;, &#39;total_cases_per_1m_population&#39;: &#39;428&#39;, &#39;deaths_per_1m_population&#39;: &#39;11&#39;, &#39;total_tests&#39;: &#39;191,341&#39;, &#39;tests_per_1m_population&#39;: &#39;11,075&#39;}, {&#39;country_name&#39;: &#39;Samoa&#39;, &#39;cases&#39;: &#39;7,185&#39;, &#39;deaths&#39;: &#39;13&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1,605&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;3&#39;, &#39;active_cases&#39;: &#39;5,567&#39;, &#39;total_cases_per_1m_population&#39;: &#39;35,783&#39;, &#39;deaths_per_1m_population&#39;: &#39;65&#39;, &#39;total_tests&#39;: &#39;53,893&#39;, &#39;tests_per_1m_population&#39;: &#39;268,399&#39;}, {&#39;country_name&#39;: &#39;Vanuatu&#39;, &#39;cases&#39;: &#39;6,793&#39;, &#39;deaths&#39;: &#39;12&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,991&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;5&#39;, &#39;active_cases&#39;: &#39;790&#39;, &#39;total_cases_per_1m_population&#39;: &#39;21,222&#39;, &#39;deaths_per_1m_population&#39;: &#39;37&#39;, &#39;total_tests&#39;: &#39;24,976&#39;, &#39;tests_per_1m_population&#39;: &#39;78,027&#39;}, {&#39;country_name&#39;: &#39;St. Vincent Grenadines&#39;, &#39;cases&#39;: &#39;6,779&#39;, &#39;deaths&#39;: &#39;106&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;6,641&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;32&#39;, &#39;total_cases_per_1m_population&#39;: &#39;60,757&#39;, &#39;deaths_per_1m_population&#39;: &#39;950&#39;, &#39;total_tests&#39;: &#39;98,860&#39;, &#39;tests_per_1m_population&#39;: &#39;886,033&#39;}, {&#39;country_name&#39;: &#39;British Virgin Islands&#39;, &#39;cases&#39;: &#39;6,296&#39;, &#39;deaths&#39;: &#39;62&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;205,792&#39;, &#39;deaths_per_1m_population&#39;: &#39;2,027&#39;, &#39;total_tests&#39;: &#39;102,862&#39;, &#39;tests_per_1m_population&#39;: &#39;3,362,163&#39;}, {&#39;country_name&#39;: &#39;Sao Tome and Principe&#39;, &#39;cases&#39;: &#39;5,953&#39;, &#39;deaths&#39;: &#39;73&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,875&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;5&#39;, &#39;total_cases_per_1m_population&#39;: &#39;26,282&#39;, &#39;deaths_per_1m_population&#39;: &#39;322&#39;, &#39;total_tests&#39;: &#39;29,036&#39;, &#39;tests_per_1m_population&#39;: &#39;128,193&#39;}, {&#39;country_name&#39;: &#39;Turks and Caicos&#39;, &#39;cases&#39;: &#39;5,941&#39;, &#39;deaths&#39;: &#39;36&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,862&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;4&#39;, &#39;active_cases&#39;: &#39;43&#39;, &#39;total_cases_per_1m_population&#39;: &#39;149,791&#39;, &#39;deaths_per_1m_population&#39;: &#39;908&#39;, &#39;total_tests&#39;: &#39;478,593&#39;, &#39;tests_per_1m_population&#39;: &#39;12,066,789&#39;}, {&#39;country_name&#39;: &#39;Saint Kitts and Nevis&#39;, &#39;cases&#39;: &#39;5,561&#39;, &#39;deaths&#39;: &#39;43&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;5,517&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1&#39;, &#39;total_cases_per_1m_population&#39;: &#39;103,215&#39;, &#39;deaths_per_1m_population&#39;: &#39;798&#39;, &#39;total_tests&#39;: &#39;65,141&#39;, &#39;tests_per_1m_population&#39;: &#39;1,209,046&#39;}, {&#39;country_name&#39;: &#39;Cook Islands&#39;, &#39;cases&#39;: &#39;4,727&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,990&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;737&#39;, &#39;total_cases_per_1m_population&#39;: &#39;268,686&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;15,740&#39;, &#39;tests_per_1m_population&#39;: &#39;894,674&#39;}, {&#39;country_name&#39;: &#39;St. Barth&#39;, &#39;cases&#39;: &#39;4,432&#39;, &#39;deaths&#39;: &#39;6&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;446,279&#39;, &#39;deaths_per_1m_population&#39;: &#39;604&#39;, &#39;total_tests&#39;: &#39;78,646&#39;, &#39;tests_per_1m_population&#39;: &#39;7,919,243&#39;}, {&#39;country_name&#39;: &#39;Palau&#39;, &#39;cases&#39;: &#39;4,396&#39;, &#39;deaths&#39;: &#39;6&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3,879&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;511&#39;, &#39;total_cases_per_1m_population&#39;: &#39;240,877&#39;, &#39;deaths_per_1m_population&#39;: &#39;329&#39;, &#39;total_tests&#39;: &#39;45,500&#39;, &#39;tests_per_1m_population&#39;: &#39;2,493,151&#39;}, {&#39;country_name&#39;: &#39;Kiribati&#39;, &#39;cases&#39;: &#39;3,076&#39;, &#39;deaths&#39;: &#39;13&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,597&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;3&#39;, &#39;active_cases&#39;: &#39;466&#39;, &#39;total_cases_per_1m_population&#39;: &#39;25,058&#39;, &#39;deaths_per_1m_population&#39;: &#39;106&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Anguilla&#39;, &#39;cases&#39;: &#39;2,731&#39;, &#39;deaths&#39;: &#39;9&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,716&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;4&#39;, &#39;active_cases&#39;: &#39;6&#39;, &#39;total_cases_per_1m_population&#39;: &#39;179,141&#39;, &#39;deaths_per_1m_population&#39;: &#39;590&#39;, &#39;total_tests&#39;: &#39;51,382&#39;, &#39;tests_per_1m_population&#39;: &#39;3,370,417&#39;}, {&#39;country_name&#39;: &#39;Saint Pierre Miquelon&#39;, &#39;cases&#39;: &#39;2,641&#39;, &#39;deaths&#39;: &#39;1&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2,449&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;1&#39;, &#39;active_cases&#39;: &#39;191&#39;, &#39;total_cases_per_1m_population&#39;: &#39;459,864&#39;, &#39;deaths_per_1m_population&#39;: &#39;174&#39;, &#39;total_tests&#39;: &#39;22,941&#39;, &#39;tests_per_1m_population&#39;: &#39;3,994,602&#39;}, {&#39;country_name&#39;: &#39;Diamond Princess&#39;, &#39;cases&#39;: &#39;712&#39;, &#39;deaths&#39;: &#39;13&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;699&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;0&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Wallis and Futuna&#39;, &#39;cases&#39;: &#39;454&#39;, &#39;deaths&#39;: &#39;7&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;438&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;9&#39;, &#39;total_cases_per_1m_population&#39;: &#39;41,713&#39;, &#39;deaths_per_1m_population&#39;: &#39;643&#39;, &#39;total_tests&#39;: &#39;20,508&#39;, &#39;tests_per_1m_population&#39;: &#39;1,884,234&#39;}, {&#39;country_name&#39;: &#39;Montserrat&#39;, &#39;cases&#39;: &#39;183&#39;, &#39;deaths&#39;: &#39;2&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;174&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;7&#39;, &#39;total_cases_per_1m_population&#39;: &#39;36,622&#39;, &#39;deaths_per_1m_population&#39;: &#39;400&#39;, &#39;total_tests&#39;: &#39;9,700&#39;, &#39;tests_per_1m_population&#39;: &#39;1,941,165&#39;}, {&#39;country_name&#39;: &#39;Falkland Islands&#39;, &#39;cases&#39;: &#39;128&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;N/A&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;N/A&#39;, &#39;total_cases_per_1m_population&#39;: &#39;34,944&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;8,632&#39;, &#39;tests_per_1m_population&#39;: &#39;2,356,538&#39;}, {&#39;country_name&#39;: &#39;Macao&#39;, &#39;cases&#39;: &#39;82&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;82&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;123&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;5,375&#39;, &#39;tests_per_1m_population&#39;: &#39;8,079&#39;}, {&#39;country_name&#39;: &#39;Vatican City&#39;, &#39;cases&#39;: &#39;29&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;29&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;36,025&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Marshall Islands&#39;, &#39;cases&#39;: &#39;15&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;8&#39;, &#39;total_cases_per_1m_population&#39;: &#39;250&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Western Sahara&#39;, &#39;cases&#39;: &#39;10&#39;, &#39;deaths&#39;: &#39;1&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;9&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;16&#39;, &#39;deaths_per_1m_population&#39;: &#39;2&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;MS Zaandam&#39;, &#39;cases&#39;: &#39;9&#39;, &#39;deaths&#39;: &#39;2&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;0&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Niue&#39;, &#39;cases&#39;: &#39;8&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;7&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;1&#39;, &#39;total_cases_per_1m_population&#39;: &#39;4,860&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Nauru&#39;, &#39;cases&#39;: &#39;3&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;3&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;274&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Saint Helena&#39;, &#39;cases&#39;: &#39;2&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;2&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;327&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}, {&#39;country_name&#39;: &#39;Micronesia&#39;, &#39;cases&#39;: &#39;1&#39;, &#39;deaths&#39;: &#39;0&#39;, &#39;region&#39;: &#39;&#39;, &#39;total_recovered&#39;: &#39;1&#39;, &#39;new_deaths&#39;: &#39;0&#39;, &#39;new_cases&#39;: &#39;0&#39;, &#39;serious_critical&#39;: &#39;0&#39;, &#39;active_cases&#39;: &#39;0&#39;, &#39;total_cases_per_1m_population&#39;: &#39;9&#39;, &#39;deaths_per_1m_population&#39;: &#39;0&#39;, &#39;total_tests&#39;: &#39;0&#39;, &#39;tests_per_1m_population&#39;: &#39;0&#39;}], &#39;statistic_taken_at&#39;: &#39;2022-04-24 11:18:01&#39;, &#39;world_total&#39;: {&#39;total_cases&#39;: &#39;509,268,964&#39;, &#39;new_cases&#39;: &#39;204,268&#39;, &#39;total_deaths&#39;: &#39;6,242,509&#39;, &#39;new_deaths&#39;: &#39;630&#39;, &#39;total_recovered&#39;: &#39;461,827,849&#39;, &#39;active_cases&#39;: &#39;41,198,606&#39;, &#39;serious_critical&#39;: &#39;42,510&#39;, &#39;total_cases_per_1m_population&#39;: &#39;65,334&#39;, &#39;deaths_per_1m_population&#39;: &#39;800.9&#39;, &#39;statistic_taken_at&#39;: &#39;2022-04-24 11:18:01&#39;}} World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . from email.headerregistry import Address import requests url = &quot;https://visual-crossing-weather.p.rapidapi.com/forecast&quot; querystring = {&quot;aggregateHours&quot;:&quot;24&quot;,&quot;location&quot;:&quot;Washington,DC,USA&quot;,&quot;contentType&quot;:&quot;csv&quot;,&quot;unitGroup&quot;:&quot;us&quot;,&quot;shortColumnNames&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;b4fb6918dfmsh4040a7ea004e390p12c87ajsn6468fcf96ab9&quot;, &quot;X-RapidAPI-Host&quot;: &quot;visual-crossing-weather.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) . Address,Date time,Latitude,Longitude,Resolved Address,Name,Wind Direction,Minimum Temperature,Maximum Temperature,Temperature,Wind Speed,Cloud Cover,Heat Index,Chance Precipitation (%),Precipitation,Sea Level Pressure,Snow Depth,Snow,Relative Humidity,Wind Gust,Wind Chill,Conditions &#34;Washington,DC,USA&#34;,&#34;10/10/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,259.8,52.1,68.4,60.2,3.2,0.0,,0.0,0.0,1024.4,0.0,0.0,43.5,8.9,,&#34;Clear&#34; &#34;Washington,DC,USA&#34;,&#34;10/11/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,199.7,44.7,71.9,56.9,3.6,24.9,,0.0,0.0,1025.9,0.0,0.0,58.6,9.8,42.7,&#34;Clear&#34; &#34;Washington,DC,USA&#34;,&#34;10/12/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,168.0,53.3,69.2,60.8,7.1,71.6,,4.8,0.0,1022.0,0.0,0.0,69.4,23.9,,&#34;Partially cloudy&#34; &#34;Washington,DC,USA&#34;,&#34;10/13/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,198.7,59.4,68.4,62.4,8.6,75.8,,100.0,0.54,1009.3,0.0,0.0,89.7,32.2,,&#34;Rain, Overcast&#34; &#34;Washington,DC,USA&#34;,&#34;10/14/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,273.9,49.4,63.1,56.0,6.6,2.5,,23.8,0.0,1012.5,0.0,0.0,48.1,25.5,47.1,&#34;Clear&#34; &#34;Washington,DC,USA&#34;,&#34;10/15/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,181.3,46.5,67.9,56.5,4.4,6.5,,0.0,0.0,1019.2,0.0,0.0,41.2,24.8,48.1,&#34;Clear&#34; &#34;Washington,DC,USA&#34;,&#34;10/16/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,216.1,53.1,68.8,59.5,4.5,68.6,,14.3,0.03,1019.0,0.0,0.0,61.2,23.9,,&#34;Partially cloudy&#34; &#34;Washington,DC,USA&#34;,&#34;10/17/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,254.1,53.7,66.1,60.1,4.7,92.0,,47.6,0.18,1015.9,0.0,0.0,76.5,26.2,,&#34;Overcast&#34; &#34;Washington,DC,USA&#34;,&#34;10/18/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,331.7,45.0,54.9,50.1,8.1,18.2,,28.6,0.0,1020.3,0.0,0.0,51.7,23.0,40.5,&#34;Clear&#34; &#34;Washington,DC,USA&#34;,&#34;10/19/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,290.1,40.9,56.9,48.6,4.7,2.7,,14.3,0.0,1025.2,0.0,0.0,51.7,19.9,37.1,&#34;Clear&#34; &#34;Washington,DC,USA&#34;,&#34;10/20/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,208.6,44.9,64.7,54.1,4.6,47.6,,14.3,0.0,1020.3,0.0,0.0,57.1,19.5,42.4,&#34;Partially cloudy&#34; &#34;Washington,DC,USA&#34;,&#34;10/21/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,219.2,50.4,67.0,57.1,6.8,24.3,,47.6,0.0,1018.5,0.0,0.0,55.1,23.0,,&#34;Clear&#34; &#34;Washington,DC,USA&#34;,&#34;10/22/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,35.9,44.9,60.0,52.0,8.2,80.4,,23.8,0.02,1022.5,0.0,0.0,64.9,23.7,40.7,&#34;Overcast&#34; &#34;Washington,DC,USA&#34;,&#34;10/23/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,31.4,54.4,57.6,55.6,7.2,100.0,,14.3,0.03,1021.1,0.0,0.0,83.6,24.6,,&#34;Overcast&#34; &#34;Washington,DC,USA&#34;,&#34;10/24/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,81.1,55.1,65.6,59.8,3.9,93.8,,4.8,0.0,1022.0,0.0,0.0,85.6,12.8,,&#34;Overcast&#34; &#34;Washington,DC,USA&#34;,&#34;10/25/2022&#34;,38.8904,-77.032,&#34;Washington, DC, United States&#34;,&#34;Washington,DC,USA&#34;,194.0,60.2,75.6,66.5,2.0,29.4,,19.0,0.0,1021.8,0.0,0.0,76.7,7.2,,&#34;Partially cloudy&#34; . TypeError Traceback (most recent call last) /Users/taiyoi/Documents/Compsci22-1/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb Cell 6 in &lt;cell line: 16&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/taiyoi/Documents/Compsci22-1/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X13sZmlsZQ%3D%3D?line=12&#39;&gt;13&lt;/a&gt; response = requests.request(&#34;GET&#34;, url, headers=headers, params=querystring) &lt;a href=&#39;vscode-notebook-cell:/Users/taiyoi/Documents/Compsci22-1/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X13sZmlsZQ%3D%3D?line=14&#39;&gt;15&lt;/a&gt; print(response.text) &gt; &lt;a href=&#39;vscode-notebook-cell:/Users/taiyoi/Documents/Compsci22-1/_notebooks/2022-10-03-PBL-python_rapidapi.ipynb#X13sZmlsZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; print[Address] TypeError: &#39;builtin_function_or_method&#39; object is not subscriptable . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://taiyoi.github.io/Compsci22/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = +1 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 0): odds.append(numbers[i]) print(odds) . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . print(&quot;Welcome to Taiyo&#39;s Burger Shop.&quot;) print(&quot;Check out the menu below&quot;) # import module from tabulate import tabulate # assign data mydata = [ [&quot;burger&quot;, &quot;3.99&quot;], [&quot;fries&quot;, &quot;1.99&quot;], [&quot;drink&quot;, &quot;0.99&quot;], ] # create header head = [&quot;Item&quot;, &quot;Price&quot;] # display table print(tabulate(mydata, headers=head, tablefmt=&quot;grid&quot;)) import sys total = 0 menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) order = True while order: food = input(&quot;Please select an item from the menu. Press enter when you are done ordering.&quot;) if food in menu: total += menu[food] print(&quot;Your total: &quot;&quot;$&quot; + &quot;{:.2f}&quot;.format(total)) else: print(&quot;Your order will be ready soon!&quot;) order = False . Welcome to Taiyo&#39;s Burger Shop. Check out the menu below +--++ | Item | Price | +========+=========+ | burger | 3.99 | +--++ | fries | 1.99 | +--++ | drink | 0.99 | +--++ Menu burger $3.99 fries $1.99 drink $0.99 Your total: $3.99 Your total: $5.98 Your total: $6.97 Your order will be ready soon! . def Order(quantity, item_list): global total if quantity &gt; item_list[2]: print(&quot;There is not enough stock!&quot;) pass else: total += item_list[1] * quantity item_list[2] -= quantity total = 0 A = [&quot;Burger&quot;, (3.99), 50], [&quot;Double Double&quot;, (4.99), 60], [&quot;Large Fries&quot;, (1.99), 200], [&quot;Drink&quot;, (0.99), 200], [&quot;Burger Meal&quot;, (5.99), 0], [&quot;Frosty&quot;, (1.99), 20], print(&quot;Welcome to Taiyo&#39;s Burger Shop.&quot;) print(&quot;Check out the menu below&quot;) # import module from tabulate import tabulate # assign data mydata = [ [&quot;Burger&quot;, &quot;2.99&quot;], [&quot;Double Double&quot;, &quot;3.99&quot;], [&quot;Large Fries&quot;, &quot;1.99&quot;], [&quot;Drink&quot;, &quot;0.99&quot;], [&quot;Burger Meal&quot;, &quot;5.99&quot;], [&quot;Frosty&quot;, &quot;1.99&quot;], ] # create header head = [&quot;Item&quot;, &quot;Price&quot;] # display table print(tabulate(mydata, headers=head, tablefmt=&quot;grid&quot;)) while True: #what I want how many for quantity choice = (input(&quot; nWhat would you like? n&quot;)).upper() quantity = int(input(&quot; nHow many would you like? n&quot;)) if choice == &quot;Burger&quot;: Order(quantity, A[0]) elif choice == &quot;Double Double&quot;: Order(quantity, A[1]) elif choice == &quot;Large Fries&quot;: Order(quantity, A[2]) elif choice == &quot;Drink&quot;: Order(quantity, A[3]) elif choice == &quot;Burger Meal&quot;: Order(quantity, A[4]) elif choice == &quot;Frosty&quot;: Order(quantity, A[5]) else: print(&quot;Invalid Item&quot;) print: total #Final ordering and total more_items = (input(&quot;Do you want to order more items? If no, press enter&quot;)).lower() if more_items == &quot;yes&quot;: pass else: break print(&quot;Thank You For Ordering From Taiyo&#39;s Burgers!&quot;) . Welcome to Taiyo&#39;s Burger Shop. Check out the menu below +++ | Item | Price | +===============+=========+ | Burger | 2.99 | +++ | Double Double | 3.99 | +++ | Large Fries | 1.99 | +++ | Drink | 0.99 | +++ | Burger Meal | 5.99 | +++ | Frosty | 1.99 | +++ Invalid Item Invalid Item . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://taiyoi.github.io/Compsci22/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "APCSP MCQ",
            "content": "MCQ College Board . . Questions/Difficulties . Overall, the questions were very difficult because I didn’t have much coding algorithm experience so I had to go online and do some researching. But overall, it started to make sense overtime. It was very similar to other algorithmic things in life like solving a rubix cube and math. . MCQ College Board PT.2 . I was having lots of trouble on the Internet portion of the APprep part. Although, I got all the answers correct last time the internet portion of the mc was difficult. The specific question: “Open protocols allow devices to specify how data packets are to be routed on the Internet in advance.” Stumped me because I didnt really have much experience with routing on the internet. .",
            "url": "https://taiyoi.github.io/Compsci22/class%20activities/week%206/2022/10/02/APPrepMC.html",
            "relUrl": "/class%20activities/week%206/2022/10/02/APPrepMC.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Scrum Team",
            "content": "Scrum Master: Ethan Tran | DevOPs: Rohin Sood | Frontend Devs: Luna Iwazaki, Taiyo Iwazaki | Backend Dev: Parav Salaniwal | . .",
            "url": "https://taiyoi.github.io/Compsci22/scrum/2022/09/26/Scrum.html",
            "relUrl": "/scrum/2022/09/26/Scrum.html",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Human day blog",
            "content": "What are we even talking about? . What makes one happy and what goals and habits does that person do to obtain happiness | . Psychology and The Good Life . Students are too focused on school and stressed over classes that they cannot enjoy life | Some of those leisurely activities include not being able to read books because of time restrictions | Students are overwhelmed, they are losing valuable information that they could gain by performing the leisurely activities like reading books. | Anxiety, Pressure, and Stress cause drop in performance. | Students become depressed and cannot perform tasks. | . What can students do in class to help combat stress and anxiety? . Being an Active listener | Doing your activities in class when you are given the time | Not wasting time that could be used to finish valuable work and being productive. | Become a happier person | Interact with classmates and teachers | . Takeaways . Most students that undergo stress, depression, and anxiety because of school work typically are the ones that do not use their time in class wisely thus, leading to less time to do things outside of class that can help make one less stressed. Using the time given in class will let a student become successful, less stressed, and happier. When you use the your time wisely and plan out a schedule of class work and leisurely activities. Making goals to chase can help you become more productive and waste less time. .",
            "url": "https://taiyoi.github.io/Compsci22/class%20activities/week%203/2022/09/15/Human-Day-Blog.html",
            "relUrl": "/class%20activities/week%203/2022/09/15/Human-Day-Blog.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Creative Development blog",
            "content": "Link . Here is the link to my app lab: https://studio.code.org/projects/applab/Cc-qDDjdZPYrvRCUXBVPxE5Q_7kc9zkwli2nr2dWFDo . Outline . Making a quiz based on different diets | Using different functions on the program blocks | Changing the theme and color of the quiz | Four Answer Options | Using score to determine what type of diet you are associated with. | You can easily change the type of quiz by changing the parameters. | . Building . The project initially was a bit confusing to me and I wasn’t really sure where to start. However, I did have some prior experience from other sources such as FLL and code.org coding day. Using primarily the “on event” and “set screen” blocks, I was able to create a quiz that revolved around who I am. I also added a finished screen and fail screen. Along with those, I added many images to make my code pop up more. Coming up with the questions was also really fun because The project was really fun to make and I enjoyed the experience. . Findings . Code.org is easier to use than python because of the blocks which allows for a better user experience | Blocks let you add and adjust code much easier | Website lets you view output automatically | Can run and test programs much easier | Can be run in your own web browser | .",
            "url": "https://taiyoi.github.io/Compsci22/class%20activities/week%203/2022/09/12/creative-development.html",
            "relUrl": "/class%20activities/week%203/2022/09/12/creative-development.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Performance Task",
            "content": "Purpose . Creating awareness of other running athletes and gaining more traction to running as a sport Bringing other athletes from other sports into cross country and track because it can help them improve in their other sport Helping those who don’t have resources to help them run by repurposing old running shoes and making them look new Donating old or new running shoes to those in need of shoes or in need of shoes for their sport Safety, bringing different exercises and stretches on the website to help those experiencing shinsplints ect. to help them find out what stretch, exercise, or help they might need for their issue . Initial Thoughts . Using all of the team members different coding skills this website can be able to work as a athletic website in a whole. My web design can help make the website look less boring and have videos or images and colors to direct athletes to different pages of the website. Luna, who is also in cross country and track can add in his input and help bring real facts onto this website. He can also give us experience as to his sport and how he deals with problems when running. . Code . Throughout this trimester, I have learned a lot about how to code a blog and now creating an app that can run what ever I code. .",
            "url": "https://taiyoi.github.io/Compsci22/class%20activities/week%203/2022/09/12/Performance-Task.html",
            "relUrl": "/class%20activities/week%203/2022/09/12/Performance-Task.html",
            "date": " • Sep 12, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Loops in functions",
            "content": "Recursive Function . Recursive functions are used for computations | Recursive functions call onto dictionaries | Dictionaries are a sequence of variables that functions can pull from. | . def factorial(x): &quot;&quot;&quot;This is a recursive function to find the factorial of an integer&quot;&quot;&quot; if x == 1: return 1 else: return (x * factorial(x-1)) num = 5 print(&quot;The factorial of&quot;, num, &quot;is&quot;, factorial(num)) . The factorial of 5 is 120 . While Functions . The while loop is used to repeat a section of code an unknown number of times until a specific condition is met | . # numbers up to # sum = 1+2+3+...+n # To take input from the user, # n = int(input(&quot;Enter n: &quot;)) n = 10 # initialize sum and counter sum = 0 i = 1 while i &lt;= n: sum = sum + i i = i+1 # update counter # print the sum print(&quot;The sum is&quot;, sum) . The sum is 55 .",
            "url": "https://taiyoi.github.io/Compsci22/week%203/2022/09/06/loops.html",
            "relUrl": "/week%203/2022/09/06/loops.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Java",
            "content": "JavaScript references . JavaScript is the most important language you need to learn as a frontend developer. It&#39;s a great first language for web developers to learn. . W3Schools - reference | feecodecamp.org - pbl . | javascript30.com - pbl . | . console.log output . Output to console using the classic programming introduction using a &quot;Hello, World!&quot; message. . The command or function is console.log() | &quot;Hello, World&quot; is a String literal. This is the referred to as Static text, as it does not change. | &quot;Hello, World&quot; is a parameter to the console.log command. | The console.log command outputs the parameter to the console, so you can see it in this Jupyter document. | Note, in a Web Application, console.log is used for debugging and is not visible from the browser via HTML. It is used behind the scenes, when using Inspect-&gt;Console from the browser. | . console.log(&quot;Hello, World!&quot;); . Hello, World! . console.log output showing use of variable . This second example is a sequence of code, two or more lines forms a sequence. This example defines a variable, then outputs the msg to terminal. . The variable &quot;var msg =&quot; is used to capture the data | The console.log(msg) outputs to console | . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . console.log output showing use of a function . This example passes the previously defined variable &quot;msg&quot; to the newly defined &quot;function logIt(output)&quot;. . There are two steps in the code, the definition of the function and the call to the function. &quot;function logIt(output) {}&quot; and everything between curly braces is the definitions of the function. | &quot;logIt(msg)&quot; is the call to the function, this actually activates the function. If you remove this line you will not receive any output to console. | . | Since the variable &quot;msg&quot; was defined in previous cell, it is used a parameter when calling the logMessage function. | . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . Showing reuse of a function . Now that a function is defined, it can be called from any of the subsequent cell in the Jupyter notebook. A function/method, is a process of creating a procedural abstraction. This a programming practice to promote reuse versus coding the same thing over and over. . First call sends a different string message | Second call sends a number | . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . Dynamic or Loosely typed language (string, number) . JavaScript is a loosely typed language, meaning you don&#39;t have to specify what type of information will be stored in a variable in advance. The variable type is determined at runtime. This is similar to Python and most interpretive languages. Java which is a compiled language is strongly typed, thus you will see string, integer, double, and object in the source code. In JavaScript, the &quot;typeof&quot; keyword returns the type. . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 object ; [ 1, 2, 3 ] . Build a Person Function/Class object and JSON . JavaScript functions have special properties and syntax is shown in many ways. In fact, a Class in JavaScript is a special function. Jupyter Notebooks seems to be more friendly to &quot;function&quot; definitions versus &quot;Class&quot;, thus this lesson uses &quot;function&quot; and &quot;prototype&quot; versus &quot;Class&quot;. . Definition of function allows for a collection of data, the &quot;function Person&quot; allows programmer to retain name, github id, and class of designation. | Definition of a prototype allow for the definition of a method associated with the function , the &quot;Person.prototype.toJSON&quot; allows the collection of data to be expressed in a json/string versus JavaScript object. | Instance of a function, the &quot;var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977)&quot; line makes a variable &quot;teacher&quot; which is an object representation of &quot;function Person&quot;. | . // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . Build a Classroom Array/List of Persons and JSON . Many key elements are shown again. New elements include... . Building an Array, &quot;var students&quot; is an array of many persons | Building a Classroom, this show forEach iteration through an array and .push adding to an array. These are key concepts in all programming languages. | . // define a student Array of Person(s) var students = [ new Person(&quot;Taiyo&quot;, &quot;TaiyoI&quot;, 2025), new Person(&quot;Rohin&quot;, &quot;rohinsood&quot;, 2025), new Person(&quot;Ethan&quot;, &quot;realethantran&quot;, 2025), new Person(&quot;Luna&quot;, &quot;lunaiwa&quot;, 2025), new Person(&quot;Parav&quot;, &quot;paravsalaniwal&quot;, 2025), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; }, Person { name: &#39;Taiyo&#39;, ghID: &#39;TaiyoI&#39;, classOf: 2025, role: &#39;Student&#39; }, Person { name: &#39;Rohin&#39;, ghID: &#39;rohinsood&#39;, classOf: 2025, role: &#39;Student&#39; }, Person { name: &#39;Ethan&#39;, ghID: &#39;realethantran&#39;, classOf: 2025, role: &#39;Student&#39; }, Person { name: &#39;Luna&#39;, ghID: &#39;lunaiwa&#39;, classOf: 2025, role: &#39;Student&#39; }, Person { name: &#39;Parav&#39;, ghID: &#39;paravsalaniwal&#39;, classOf: 2025, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . IJavaScript and Table formatting using toHTML method . This example builds a Classroom method _toHTML which is passed to the IJavaScript interpreter $$.html which renders output similarly to a real website. . JavaScript in the _toHTML method is broken into three parts... Style part is building CSS inline formatting | Body part is constructing the Table Rows (tr), Table Headings (th), and Table Data (td). The table data is obtained from a Classroom object. The JavaScript for loop allows the construction of a new row of data for each person object in the Array. | Return part creates the HTML fragment for rendering | . | The last line in the example $$.html is IJavaScript HTML interpreter and by passing the parameter of the _toHTML method it obtains HTML to render | . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Taiyo | TaiyoI | 2025 | Student | Rohin | rohinsood | 2025 | Student | Ethan | realethantran | 2025 | Student | Luna | lunaiwa | 2025 | Student | Parav | paravsalaniwal | 2025 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://taiyoi.github.io/Compsci22/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Installation Checks",
            "content": "python --version python2 --version . Python 3.9.12 Python 2.7.18 . conda list . # packages in environment at /Users/taiyoi/opt/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39hecd8cb5_1 aiohttp 3.8.1 py39hca72f7f_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39hecd8cb5_0 anaconda-navigator 2.1.4 py39hecd8cb5_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39hecd8cb5_0 appdirs 1.4.4 pyhd3eb1b0_0 applaunchservices 0.2.1 pyhd3eb1b0_0 appnope 0.1.2 py39hecd8cb5_1001 appscript 1.1.2 py39h9ed2024_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39hca72f7f_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39hecd8cb5_0 astropy 5.0.4 py39h67323c0_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bash-kernel 0.7.2 pypi_0 pypi bcrypt 3.2.0 py39h9ed2024_0 beautifulsoup4 4.11.1 py39hecd8cb5_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39hca72f7f_0 bkcharts 0.2 py39hecd8cb5_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h2842e9f_0 bokeh 2.4.2 py39hecd8cb5_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39h67323c0_0 brotli 1.0.9 hb1e8313_2 brotlipy 0.7.0 py39h9ed2024_1003 brunsli 0.1 h23ab428_0 bzip2 1.0.8 h1de35cc_0 c-ares 1.18.1 hca72f7f_0 ca-certificates 2022.3.29 hecd8cb5_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39hecd8cb5_2 cffi 1.15.0 py39hc55c11b_1 cfitsio 3.470 hee0f690_6 chardet 4.0.0 py39hecd8cb5_1003 charls 2.2.0 h23ab428_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39hecd8cb5_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39hecd8cb5_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.13.0 py39hecd8cb5_0 conda-build 3.21.8 py39hecd8cb5_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39hca72f7f_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39h2fd3fbb_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 hca72f7f_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39he9d5cce_0 cytoolz 0.11.0 py39h9ed2024_0 daal4py 2021.5.0 py39h24a4e90_0 dal 2021.5.0 hecd8cb5_782 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39hecd8cb5_1 debugpy 1.5.1 py39he9d5cce_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39hecd8cb5_1 entrypoints 0.4 py39hecd8cb5_0 et_xmlfile 1.1.0 py39hecd8cb5_0 executing 0.8.3 pyhd3eb1b0_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 hd8bbffd_0 frozenlist 1.2.0 py39hca72f7f_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39hecd8cb5_1 gensim 4.1.2 py39he9d5cce_0 giflib 5.2.1 haf1e3a3_0 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h23ab428_2 gmpy2 2.1.2 py39hd5de756_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h9ed2024_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39hecd8cb5_0 greenlet 1.1.1 py39h23ab428_0 grpcio 1.42.0 py39ha29bfda_0 h5py 3.6.0 py39h4a1dd59_0 hdf5 1.10.6 hdbbcd12_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 h0a44026_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39ha952a84_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39hecd8cb5_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39hecd8cb5_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 hecd8cb5_3538 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39hecd8cb5_0 ipython 8.2.0 py39hecd8cb5_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39hecd8cb5_1 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e hca72f7f_0 jq 1.6 h9ed2024_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39hecd8cb5_0 jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 haf1e3a3_2 keyring 23.4.0 py39hecd8cb5_0 kiwisolver 1.3.2 py39he9d5cce_0 krb5 1.19.2 hcd88c3b_0 lazy-object-proxy 1.6.0 py39h9ed2024_0 lcms2 2.12 hf1fd2bf_0 lerc 3.0 he9d5cce_0 libaec 1.0.4 hb1e8313_1 libarchive 3.4.2 haa3ed63_0 libcrc32c 1.1.1 hb1e8313_2 libcurl 7.82.0 h6dfd666_0 libcxx 12.0.0 h2f01273_0 libdeflate 1.8 h9ed2024_5 libedit 3.1.20210910 hca72f7f_0 libev 4.33 h9ed2024_1 libffi 3.3 hb1e8313_2 libgfortran 3.0.1 h93005f0_2 libiconv 1.16 hca72f7f_2 libidn2 2.3.2 h9ed2024_0 liblief 0.11.5 he9d5cce_1 libllvm11 11.1.0 h46f1229_1 libnghttp2 1.46.0 ha29bfda_0 libpng 1.6.37 ha441bb4_0 libprotobuf 3.19.1 h8346a28_0 libsodium 1.0.18 h1de35cc_0 libspatialindex 1.9.3 h23ab428_0 libssh2 1.10.0 h0a4fc7d_0 libtiff 4.2.0 h87d7836_0 libunistring 0.9.10 h9ed2024_0 libwebp 1.2.2 h56c3ce4_0 libwebp-base 1.2.2 hca72f7f_0 libxml2 2.9.12 hcdb78fc_0 libxslt 1.1.34 h83b36ba_0 libzopfli 1.0.3 hb1e8313_0 llvm-openmp 12.0.0 h0dcd299_1 llvmlite 0.38.0 py39h8346a28_0 locket 0.2.1 py39hecd8cb5_2 lxml 4.8.0 py39h65b224f_0 lz4-c 1.9.3 h23ab428_1 lzo 2.10 haf1e3a3_2 markdown 3.3.4 py39hecd8cb5_0 markupsafe 2.0.1 py39h9ed2024_0 matplotlib 3.5.1 py39hecd8cb5_1 matplotlib-base 3.5.1 py39hfb0c5b7_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39hecd8cb5_1 mistune 0.8.4 py39h9ed2024_1000 mkl 2021.4.0 hecd8cb5_637 mkl-service 2.4.0 py39h9ed2024_0 mkl_fft 1.3.1 py39h4ab4a9b_0 mkl_random 1.2.2 py39hb2f4e1b_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h6ef4df4_1 mpfr 4.0.2 h9066e36_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39hecd8cb5_0 msgpack-python 1.0.2 py39hf7b0b51_1 multidict 5.2.0 py39hca72f7f_2 multipledispatch 0.6.0 py39hecd8cb5_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39hecd8cb5_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39hecd8cb5_0 nbconvert 6.4.4 py39hecd8cb5_0 nbformat 5.3.0 py39hecd8cb5_0 ncurses 6.3 hca72f7f_2 nest-asyncio 1.5.5 py39hecd8cb5_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nodejs 10.13.0 h0a44026_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39hecd8cb5_0 numba 0.55.1 py39hae1ba45_0 numexpr 2.8.1 py39h2e5f0a9_0 numpy 1.21.5 py39h2e5f0a9_1 numpy-base 1.21.5 py39h3b1a694_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h9ed2024_0 openjpeg 2.4.0 h66ea3da_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n hca72f7f_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39he9d5cce_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39hecd8cb5_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39hecd8cb5_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 pathspec 0.7.0 py_0 patsy 0.5.2 py39hecd8cb5_1 pep8 1.7.1 py39hecd8cb5_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39hde71d04_0 pip 21.2.4 py39hecd8cb5_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39hecd8cb5_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39he9d5cce_0 psutil 5.8.0 py39h9ed2024_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39he9d5cce_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h9ed2024_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39hecd8cb5_0 pycurl 7.44.1 py39hbcfaee0_1 pydispatcher 2.0.5 py39hecd8cb5_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h9ed2024_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39hecd8cb5_0 pylint 2.9.6 py39hecd8cb5_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39he9d5cce_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h23ab428_6 pyrsistent 0.18.0 py39hca72f7f_0 pysocks 1.7.1 py39hecd8cb5_0 pytables 3.6.1 py39h648f197_1 pytest 7.1.1 py39hecd8cb5_0 python 3.9.12 hdfd78df_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h23ab428_3 python.app 3 py39hca72f7f_0 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39hca72f7f_0 pyyaml 6.0 py39hca72f7f_1 pyzmq 22.3.0 py39he9d5cce_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h468cd18_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39hecd8cb5_0 readline 8.1.2 hca72f7f_1 regex 2022.3.15 py39hca72f7f_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39hecd8cb5_1 ruamel_yaml 0.15.100 py39h9ed2024_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39hae1ba45_0 scikit-learn 1.0.2 py39hae1ba45_1 scikit-learn-intelex 2021.5.0 py39hecd8cb5_0 scipy 1.7.3 py39h8c7af03_0 scrapy 2.6.1 py39hecd8cb5_0 seaborn 0.11.2 pyhd3eb1b0_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39hecd8cb5_0 sip 4.19.13 py39h23ab428_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 he9d5cce_0 sniffio 1.2.0 py39hecd8cb5_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39hecd8cb5_1 spyder-kernels 2.1.3 py39hecd8cb5_0 sqlalchemy 1.4.32 py39hca72f7f_0 sqlite 3.38.2 h707629a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39hca72f7f_0 sympy 1.10.1 py39hecd8cb5_0 tabulate 0.8.9 py39hecd8cb5_0 tbb 2021.5.0 haf03e11_0 tbb4py 2021.5.0 py39haf03e11_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39hecd8cb5_0 terminado 0.13.1 py39hecd8cb5_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h7bc2e8c_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h9ed2024_0 tqdm 4.64.0 py39hecd8cb5_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39hca72f7f_0 typed-ast 1.4.3 py39h9ed2024_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39he9d5cce_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 haf1e3a3_0 urllib3 1.26.9 py39hecd8cb5_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h999c104_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39hecd8cb5_1 websocket-client 0.58.0 py39hecd8cb5_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h6dfd666_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39hecd8cb5_0 wrapt 1.12.1 py39h9ed2024_1 wurlitzer 3.0.2 py39hecd8cb5_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xlwings 0.24.9 py39hecd8cb5_0 xz 5.2.5 h1de35cc_0 yaml 0.2.5 haf1e3a3_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h9ed2024_0 zeromq 4.3.4 h23ab428_0 zfp 0.5.5 he9d5cce_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h4dc903c_2 zope 1.0 py39hecd8cb5_1 zope.interface 5.4.0 py39h9ed2024_0 zstd 1.4.9 h322a384_0 . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Conda Check jupyter 1.0.0 py39hecd8cb5_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39hecd8cb5_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 python3912jvsc74a57bd0a7fbbb54f4c181edc972ed0306a01439bd91c43236a2d6fefc317f72e31b9e0c /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3912jvsc74a57bd0a7fbbb54f4c181edc972ed0306a01439bd91c43236a2d6fefc317f72e31b9e0c bash /Users/taiyoi/Library/Jupyter/kernels/bash javascript /Users/taiyoi/Library/Jupyter/kernels/javascript python3 /Users/taiyoi/opt/anaconda3/share/jupyter/kernels/python3 . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3106jvsc74a57bd0b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python389jvsc74a57bd031f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6 python3912jvsc74a57bd0a7fbbb54f4c181edc972ed0306a01439bd91c43236a2d6fefc317f72e31b9e0c /Users/taiyoi/.vscode/extensions/ms-toolsai.jupyter-2022.7.1102252217/temp/jupyter/kernels/python3912jvsc74a57bd0a7fbbb54f4c181edc972ed0306a01439bd91c43236a2d6fefc317f72e31b9e0c python3 /Users/taiyoi/opt/anaconda3/share/jupyter/kernels/python3 .",
            "url": "https://taiyoi.github.io/Compsci22/techtalk/bash_checks",
            "relUrl": "/techtalk/bash_checks",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Observations",
            "content": "Theme Changed . Here is a screenshot of me changing the theme of my fastpages to the hacker theme . . . Observations . My _pages links are not working so I cannot search, click on my different subjects, click on the about me, or click on tags. | However, Everything else seems to be working correctly | .",
            "url": "https://taiyoi.github.io/Compsci22/class%20activities/week%203/2022/09/02/Observations.html",
            "relUrl": "/class%20activities/week%203/2022/09/02/Observations.html",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review we used variables in the introduction last week. Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | name = &quot;S&quot; print(&quot;What is the value of variable name?&quot;, &quot;John Doe&quot;, name) . What is the value of variable name? John M John Doe . # variable of type string name = &quot;John Doe&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 18 print(&quot;age&quot;, age, type(age)) # variable of type float score = 90.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name John Doe &lt;class &#39;str&#39;&gt; age 18 &lt;class &#39;int&#39;&gt; score 90.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;John Doe&#39;, &#39;age&#39;: 18, &#39;score&#39;: 90.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] John Doe &lt;class &#39;str&#39;&gt; . List and Dictionary purpose . Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list | In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). | . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Taiyo&quot;, &quot;LastName&quot;: &quot;iwazaki&quot;, &quot;DOB&quot;: &quot;november 19&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;Taiyo.Iwazaki123@gmail.com&quot;, &quot;Owns_Cars&quot;: &quot;N/A&quot;, &quot;Aliens&quot;: [&quot;none&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Taiyo&#39;, &#39;LastName&#39;: &#39;iwazaki&#39;, &#39;DOB&#39;: &#39;november 19&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;Taiyo.Iwazaki123@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;N/A&#39;, &#39;Aliens&#39;: [&#39;none&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Taiyo iwazaki Residence: San Diego Birth Day: november 19 Cars: N, /, A Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://taiyoi.github.io/Compsci22/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Alumni Seminar",
            "content": "Notes . six talkers | Anthony Vo | Andrew | Colen | CSA helps apply to real world problems | . What is the biggest challenge you’ve encountered with computer science? . having many errors | googling can help get over errors | clashing egos | focusing on your own path because others will make you feel bad for your self | transition from highschool comp sci to college compsci is hard because theory comes into play | syntax errors are very annoying | google can help you with many syntax problems | temptation to BS many projects | making sure you do not cut corners and make sure everything you do is like a checkbox for points | having a mindset to go above and beyond can help you | Getting started in a new area of computer science. | Computer science is very inter-connected | . Are there any PBL scenarios in college computer science classes (project based learning) . There will not be many hands on experience in college | make the most of your time while you have it | Mix of both: PBL and Tests. | PBL will be in college but not everyone does sprints | . How have you applied CS in your major if you are not majoring in CS? . Converting input | Coding will be everywhere | Many calculations | Stress tests | 3D printing | Computer science can help with higher level math courses | Stats courses | Will be coding in stats | . For existing college students, have you had a job with school or professor? . Tutoring | For coding jobs | Being above and beyond | Intern at Northrop Grumman | Robotics coaches also a teacher at UCSD | Triton AI | Code Ninjas | LG Intern (APIS Web Development) | Insights . | Using this information that I have learned from the seminar, I now understand what I can do with my computer science knowledge in class and implement it to my daily life. | .",
            "url": "https://taiyoi.github.io/Compsci22/extra%20credit/week%202/2022/08/29/Extra-credit-seminar.html",
            "relUrl": "/extra%20credit/week%202/2022/08/29/Extra-credit-seminar.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Taiyo's Jupyter QNAQuiz",
            "content": "#Using a Dictionary with the variable QandA, I was able to create a quiz that abstracted data from the dictionary and inputted it into the quiz. QandA = [ &quot;1. True or False, def is a key word in Python that defines a function&quot;, &quot;True&quot;, &quot;2. True or False, In Python anatomy of you will NOT be importing libraries and functions?&quot;, &quot;False&quot;, &quot;3. True or False, Hello world is a string literal?&quot;, &quot;True&quot;, &quot;4. True or False, Output in Jupyter Notebook is below the code cell&quot;, &quot;True&quot;, &quot;5. True or False, Input and Output in Jupyter Notebook Input is NOT in line with Output?&quot;, &quot;True&quot;, &quot;6. True or False, an if expression is not evaluated for true or false&quot;, &quot;False&quot;, &quot;7. True or False, return command in function does not return msg input by user&quot;, &quot;False&quot;, &quot;8. True or False, false takes branch of code directly under else command&quot;, &quot;True&quot;, &quot;9. True or False, correct += 1 is NOT the way to add one to the score&quot;, &quot;False&quot;, &quot;10. True or False, is msg a parameter to the print function?&quot;, &quot;True&quot;, ] #total points and using new quiz var points = 0 current = 0 quiz = 1 print (&quot;Welcome to my true or false quiz!&quot;) #Using while lets me loop function while quiz &lt; 11: print() question = input(QandA[current]) if question == QandA[current+1]: print (&quot;That&#39;s correct!&quot;) points = points +1 current = current +2 else: print (&quot;Sorry, that is incorrect!&quot;) points = points -1 current = current +2 quiz = quiz +1 #Final Message print(&quot;Good Job, You scored&quot;, points, &quot;points out of ten&quot;) . Welcome to my true or false quiz! That&#39;s correct! That&#39;s correct! That&#39;s correct! That&#39;s correct! That&#39;s correct! That&#39;s correct! That&#39;s correct! That&#39;s correct! That&#39;s correct! That&#39;s correct! Good Job, You scored 10 points out of ten .",
            "url": "https://taiyoi.github.io/Compsci22/week%202/2022/08/26/QNA-List.html",
            "relUrl": "/week%202/2022/08/26/QNA-List.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Taiyo's Jupyter MCQuiz",
            "content": "score = 0 # Question 1 answer1 = input(&quot;What does Def do in a function? na. nothing nb. defines a function nc. sudo code nd. changes directory nAnswer: &quot;) if answer1 == &quot;b&quot; or answer1 == &quot;defines a function&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: defines a function.&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) # Question 2 answer2 = input(&quot;What is Python3 na. A snake nb. A programming language nc. A video game nd. Javascript nAnswer: &quot;) if answer2 == &quot;b&quot; or answer1 == &quot;A programming language&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: A programming language&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) # Question 3 answer3 = input(&quot;What is a sequence? na. Two or more lines of code nb. A line of code nc. multiple words nd. I dont know nAnswer: &quot;) if answer3 == &quot;a&quot; or answer1 == &quot;Two or more lines of code&quot;: score += 1 print (&quot;correct!&quot;) print (&quot;score: &quot;, score) print (&quot; n&quot;) else: print(&quot;Incorrect! The answer is: Two or more lines of code&quot;) print(&quot;score: &quot;, score) print(&quot; n&quot;) #Final Message if score &lt;= 1: print (&quot;Your total score is:&quot;, score, &quot;- Get Better&quot;) elif score == 2: print (&quot;Your total score is:&quot;, score, &quot;- You Did Alright&quot;) else: print (&quot;Your total score is:&quot;, score, &quot;-GOOD JOB!&quot;) . correct! score: 1 correct! score: 2 correct! score: 3 Your total score is: 3 -GOOD JOB! .",
            "url": "https://taiyoi.github.io/Compsci22/week%202/2022/08/26/MCQuiz.html",
            "relUrl": "/week%202/2022/08/26/MCQuiz.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Extra Credit",
            "content": "Productive Blogging . -blogging for other classes -being productive . Procedural Abstraction . little pieces of code so that you can put them in other larger parts of code | . Data Abstraction .",
            "url": "https://taiyoi.github.io/Compsci22/class%20activities/week%202/2022/08/25/Notes-for-CSP.html",
            "relUrl": "/class%20activities/week%202/2022/08/25/Notes-for-CSP.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Taiyo's Jupyter Post",
            "content": ". &quot;My First Jupyter Notebook&quot; . &quot;JUPYTER!!&quot; . This is my Jupyter Notebook . It is a little different than using markdown in the _post section, however, integrating other languages under the notebook section is much easier. . Using python, I will print &quot;hello&quot; bellow. . Printing Hello!!! . print(&quot;hello&quot;) variable = &quot;Coding is fun&quot; print(variable) . hello Coding is fun . Calculating area of a triangle using Python!!! . a = int(input(&quot;A Value&quot;)) b = int(input(&quot;B Value&quot;)) c = int(input(&quot;C Value&quot;)) # Uncomment below to take inputs from the user # a = float(input(&#39;Enter first side: &#39;)) # b = float(input(&#39;Enter second side: &#39;)) # c = float(input(&#39;Enter third side: &#39;)) # calculate the semi-perimeter s = (a + b + c) / 2 # calculate the area area = (s*(s-a)*(s-b)*(s-c)) ** 0.5 print(&#39;The area of the triangle is %0.2f&#39; %area) . The area of the triangle is 6.00 .",
            "url": "https://taiyoi.github.io/Compsci22/week%201/2022/08/21/Jupyter-Post.html",
            "relUrl": "/week%201/2022/08/21/Jupyter-Post.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "My First Blog Post",
            "content": "My First Blog Post!! . This is my first blog post!! :joy: . Hello, My name is Taiyo Iwazaki and this is my first blog post on my fast pages website for computer science. . My Favorite foods . Pizza | Pasta | Oatmeal | Steak | Ramen | . Ok, now that you have seen my favorite foods, lets explore coding! . Adding a table!! . Times Table Easy . 1 | 2 | 3 | . 2 | 4 | 6 | . 3 | 6 | 9 | . 4 | 8 | 12 | . 5 | 10 | 15 | . Exploring Coding . ’’’ { print(“hello world”) var = “coding is fun” print(“var”) } ‘’’ . My Youtube Channel . Subscribe to my YouTube Channel! :joy: https://www.youtube.com/channel/UC4AOSpmXdOeJXestKv5Fxjw . Photo . Here is a photo! . Thanks For Reading!! .",
            "url": "https://taiyoi.github.io/Compsci22/week%201/2022/08/19/My-First-Post.html",
            "relUrl": "/week%201/2022/08/19/My-First-Post.html",
            "date": " • Aug 19, 2022"
        }
        
    
  

  
  
      ,"page0": {
          "title": "Vocab",
          "content": "Vocabulary for this tri here . Key Vocabulary . Sequence: . two or more lines of code | . Variable . A value that changes based off of conditions | .",
          "url": "https://taiyoi.github.io/Compsci22/Vocab/",
          "relUrl": "/Vocab/",
          "date": ""
      }
      
  

  
      ,"page1": {
          "title": "Fruits",
          "content": "Number Fruits . 1 | Cherry | . 2 | Apple | . 3 | Dragon fruit | . 4 | Watermelon | . 5 | Orange | .",
          "url": "https://taiyoi.github.io/Compsci22/Fruits/",
          "relUrl": "/Fruits/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://taiyoi.github.io/Compsci22/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  

  
      ,"page6": {
          "title": "Week Schedule",
          "content": "Work from the week and the hacks special assignments! . Week Date Hacks . 0 | 2022-08-22 | Week 0 | . 1 | 2022-08-29 | Week 1 | . 2 | 2022-09-06 | Week 2 | . .",
          "url": "https://taiyoi.github.io/Compsci22/schedule/",
          "relUrl": "/schedule/",
          "date": ""
      }
      
  

  
      ,"page7": {
          "title": "Game",
          "content": "2048 . 104+24 1420 New Game . Keep Going Try Again? 26688244622 .",
          "url": "https://taiyoi.github.io/Compsci22/game/",
          "relUrl": "/game/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  

  
  

  
      ,"page16": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://taiyoi.github.io/Compsci22/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}